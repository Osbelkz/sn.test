{"version":3,"sources":["api/api.ts","components/common/Pagination/Pagination.module.scss","components/Login/Login.module.scss","redux/reducers/actions/profile-actions.ts","components/Users/User/User.module.scss","components/Nav/Nav.module.scss","components/UI/Preloader/Preloader.tsx","components/Settings/Settings.module.scss","components/common/FormInput/FormInput.module.css","components/Wrapper/Wrapper.tsx","components/common/FormInput/FormInput.tsx","components/Users/Users.module.scss","components/Nav/LoginNav/LoginNav.module.scss","components/common/Buttons/LogoutButton/LogoutButton.module.scss","redux/reducers/actions/dialogs-actions.ts","assets/userDefaultPhoto.png","components/Wrapper/Wrapper.module.scss","components/UI/Preloader/Preloader.module.scss","components/common/Buttons/LogoutButton/File-Import-Outline.svg","components/common/Buttons/LogoutButton/File-Export-Outline.svg","assets/nav/Profile-Outline.svg","assets/nav/Chat-Outline.svg","assets/nav/Profile-GroupFriend-Outline.svg","assets/nav/Documents-Outline.svg","assets/nav/Play-Outline.svg","assets/nav/Setting-Outline.svg","serviceWorker.ts","redux/reducers/actions/users-actions.ts","redux/reducers/profile-page-reducer.ts","redux/reducers/dialogs-reducer.ts","redux/reducers/actions/auth-actions.ts","utils/objects-helpers.ts","redux/reducers/users-reducer.ts","redux/reducers/actions/app-actions.ts","redux/reducers/auth-reducer.tsx","redux/reducers/app-reducer.ts","redux/redux-store.ts","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/common/Pagination/Pagination.tsx","components/Users/User/User.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/Login/LoginForm/LoginForm.tsx","components/Login/Login.tsx","components/common/Buttons/LogoutButton/LogoutButton.tsx","components/Nav/LoginNav/LoginNav.tsx","components/Nav/Nav.tsx","components/Nav/NavContainer.tsx","hoc/withAuthRedirect.tsx","App.tsx","index.tsx"],"names":["ResultCodes","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","res","data","unfollow","userId","delete","follow","post","profileAPI","getProfile","getStatus","updateStatus","status","put","savePhoto","file","formData","FormData","append","updateProfile","authAPI","getAuthUserData","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchUrl","module","exports","ACTIONS_TYPE","makeAction","type","payload","addPostAC","ADD_POST","addLikeAC","ADD_LIKE","deletePostAC","DELETE_POST","setUserProfileAC","SET_USER_PROFILE","setUserStatusAC","SET_USER_STATUS","setPhotoAC","SET_USER_PHOTO","updateProfileAC","UPDATE_PROFILE","getUserProfileTC","dispatch","a","profile","getStatusTC","updateStatusTC","resultCode","savePhotoTC","photos","updateProfileTC","Preloader","className","classes","ldsFacebook","Wrapper","props","wrapper","children","FormInput","React","memo","forwardRef","ref","label","errorCondition","errorText","rest","input","input__label","input__elem","input__error","inputs__error_text","addMessageAC","ADD_MESSAGE","Boolean","window","location","hostname","match","initialState","posts","id","uuid","message","likeCounter","updateProfileTextError","dialogs","name","messages","setFollowAC","FOLLOW","setUnfollowAC","UNFOLLOW","setUsersAC","SET_USERS","setCurrentPageAC","SET_CURRENT_PAGE","setTotalCountOfUsersAC","SET_TOTAL_COUNT","toggleIsFetchingAC","TOGGLE_IS_FETCHING","toggleFollowingProgressAC","TOGGLE_IS_FOLLOWING_PROGRESS","getUsersTC","isFetching","users","items","totalUsersCount","totalCount","followUnfollowFlow","apiMethod","actionCreator","updateObjectInArray","itemId","objPropName","newObjProps","map","item","followingInProgress","setAuthUserDataAC","SET_AUTH_USER_DATA","getCaptchaUrlSuccessAC","GET_CAPTCHA_URL_SUCCESS","setAuthErrorTextAC","SET_AUTH_ERROR_TEXT","getAuthUserDataTC","Success","isAuth","getCaptchaUrl","response","captchaUrl","url","error","setInitializedSuccessAC","SET_INITIALIZED_SUCCESS","initialized","rootReducer","combineReducers","profilePage","state","action","postId","filter","dialogsPage","usersPage","followed","auth","app","store","configureStore","reducer","middleware","getDefaultMiddleware","prepend","thunkMiddleware","News","Music","Settings","settings","block","block__row","block__element","block__content","Pagination","itemsOnPage","totalItems","changePageNumber","pagesCount","Math","ceil","firstPage","lastPage","pages","i","push","pagination","pagination__btn","disabled","onClick","pagination__pages","pagination__btn_active","pagination__space","pageN","key","User","userData","userCard","userCard__authorPhoto","to","src","small","userDefaultPhoto","alt","followBtn","some","userCard__body","userCard__body_header","userCard__body_text","Users","onPageNumberChanged","pageButton","user","UsersContainer","useDispatch","useSelector","useEffect","useCallback","pageNumber","followHandler","bind","followTC","unfollowHandler","unfollowTC","LoginForm","useForm","register","handleSubmit","errors","onSubmit","loginForm","loginForm__field","defaultValue","process","required","value","pattern","minLength","formSummaryError","placeholder","loginForm__rememberMe","htmlFor","loginForm__button","Login","length","loginTC","loginContainer","loginWrapper","LoginButton","btnType","button","button__img","LoginNav","logoutHandler","login__info","Nav","navItems","nav","nav__items","navItem","pathTo","activeClassName","active","item__icon","icon","item__name","navName","Profile","Chat","NavContainer","RedirectComponent","DialogsContainer","lazy","ProfileContainer","App","init","promise","Promise","all","addEventListener","catchAllUnhandledErrors","removeEventListener","alert","path","render","Suspense","fallback","component","LoginPage","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"4GAAA,8KAwEYA,EAxEZ,QAGIC,EAHJ,OAGeC,EAAMC,OAAO,CACxBC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAINC,EAAW,CACpBC,SADoB,WACsC,IAAjDC,EAAgD,uDAA1B,EAAGC,EAAuB,uDAAJ,GACjD,OAAOT,EAASU,IAAT,qBAAiDF,EAAjD,kBAAsEC,IACxEE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAEzBC,SALoB,SAKXC,GACL,OAAOf,EAASgB,OAAT,iBAAwCD,KAEnDE,OARoB,SAQbF,GACH,OAAOf,EAASkB,KAAT,iBAAsCH,MAKxCI,EAAa,CACtBC,WADsB,SACXL,GACP,OAAOf,EAASU,IAAT,kBAAqCK,IACvCJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAEzBQ,UALsB,SAKZN,GACN,OAAOf,EAASU,IAAT,yBAAuCK,IACzCJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAEzBS,aATsB,SASTC,GACT,OAAOvB,EAASwB,IAAT,iBAA6C,CAACD,WAChDZ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAEzBY,UAbsB,SAaZC,GACN,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,QAASH,GAClB1B,EAASwB,IAAT,gBAAyDG,GAC3DhB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAEzBiB,cAnBsB,SAmBRjB,GACV,OAAOb,EAASwB,IAAT,UAAsCX,KAIxCkB,EAAU,CACnBC,gBADmB,WAEf,OAAOhC,EAASU,IAAT,YACFC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAEzBoB,MALmB,SAKbC,EAAeC,GAA+E,IAA7DC,EAA4D,wDAA/BC,EAA+B,uDAAN,KACzF,OAAOrC,EAASkB,KAAT,aAA8D,CAACgB,QAAOC,WAAUC,aAAYC,YAC9F1B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAEzByB,OATmB,WAUf,OAAOtC,EAASgB,OAAT,cACFL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAIhB0B,EAAc,CACvBC,aADuB,WAEnB,OAAOxC,EAASU,IAAT,+B,SAMHX,O,qBAAAA,I,iBAAAA,I,2CAAAA,M,4BCvEZ0C,EAAOC,QAAU,CAAC,WAAa,+BAA+B,kBAAoB,sCAAsC,gBAAkB,oCAAoC,uBAAyB,2CAA2C,kBAAoB,wC,mBCAtQD,EAAOC,QAAU,CAAC,eAAiB,8BAA8B,aAAe,4BAA4B,UAAY,yBAAyB,kBAAoB,iCAAiC,iBAAmB,gCAAgC,sBAAwB,qCAAqC,iBAAmB,kC,mVCK7TC,E,wCAAAA,K,4BAAAA,E,4BAAAA,E,kCAAAA,E,4CAAAA,E,0CAAAA,E,wCAAAA,E,yCAAAA,M,KAUZ,IAAMC,EAAa,SAA4BC,GAA5B,OAAwC,SAACC,GAAD,MAAiB,CAACD,OAAMC,aAoBtEC,EAAYH,EAAsDD,EAAaK,UAK/EC,EAAYL,EAAsDD,EAAaO,UAK/EC,EAAeP,EAA4DD,EAAaS,aAKxFC,EAAmBT,EAAqED,EAAaW,kBAKrGC,EAAkBX,EAAmED,EAAaa,iBAElGC,EAAab,EAAoDD,EAAae,gBAE9EC,EAAkBf,EAAmED,EAAaiB,gBASlGC,EAAmB,SAAC9C,GAAD,8CAA+B,WAAO+C,GAAP,eAAAC,EAAA,sEAC1C5C,IAAWC,WAAWL,GADoB,OACvDF,EADuD,OAE3DiD,EAAST,EAAiB,CAACW,QAASnD,KAFuB,2CAA/B,uDAKnBoD,EAAc,SAAClD,GAAD,8CAA+B,WAAO+C,GAAP,eAAAC,EAAA,sEACnC5C,IAAWE,UAAUN,GADc,OAClDQ,EADkD,OAEtDuC,EAASP,EAAgB,CAAChC,YAF4B,2CAA/B,uDAKd2C,EAAiB,SAAC3C,GAAD,8CAA+B,WAAOuC,GAAP,SAAAC,EAAA,sEACxC5C,IAAWG,aAAaC,GADgB,OAEjC,IAFiC,OAEhD4C,YACLL,EAASP,EAAgB,CAAChC,YAH2B,2CAA/B,uDAMjB6C,EAAc,SAAC1C,GAAD,8CAA0B,WAAOoC,GAAP,eAAAC,EAAA,sEAChC5C,IAAWM,UAAUC,GADW,OAEzB,KADpBb,EAD6C,QAExCsD,YACLL,EAASL,EAAW5C,EAAKA,KAAKwD,SAHe,2CAA1B,uDAMdC,EAAkB,SAACzD,GAAD,8CAA+C,WAAOiD,GAAP,SAAAC,EAAA,sEAC1D5C,IAAWW,cAAcjB,GADiC,OAE9C,IAF8C,OAElEA,KAAKsD,YACTL,EAASH,EAAgB9C,IAH6C,2CAA/C,wD,iBC1F/B4B,EAAOC,QAAU,CAAC,SAAW,uBAAuB,sBAAwB,oCAAoC,sBAAwB,oCAAoC,oBAAsB,kCAAkC,UAAY,0B,gBCAhPD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,WAAa,wBAAwB,KAAO,kBAAkB,OAAS,oBAAoB,WAAa,wBAAwB,WAAa,0B,+BCDtL,uEAGO,SAAS6B,IACZ,OACI,yBAAKC,UAAWC,IAAQC,aACpB,8BAAW,8BAAW,iC,gBCLlCjC,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,WAAa,6BAA6B,eAAiB,iCAAiC,eAAiB,mC,gBCA/JD,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,aAAe,gCAAgC,YAAc,+BAA+B,aAAe,gCAAgC,mBAAqB,wC,gCCDnN,qCASeiC,IANf,SAAiBC,GACb,OACI,yBAAKJ,UAAWC,IAAQI,SAAUD,EAAME,Y,+GCOnCC,EAAYC,IAAMC,KAAKD,IAAME,YACtC,WAAgDC,GAAS,IAAvDC,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,eAAgBC,EAA+B,EAA/BA,UAAeC,EAAgB,sDAEpD,OACI,yBAAKf,UAAWC,IAAQe,OACpB,uBAAGhB,UAAWC,IAAQgB,cAAeL,GACrC,yCAAOZ,UAAS,UAAKC,IAAQiB,YAAb,YAA4BL,EAAiBZ,IAAQkB,aAAe,IAC7ER,IAAKA,GACDI,IACVF,EAAiB,yBACdb,UAAWC,IAAQmB,oBAAqBN,GAAmB,W,gBCrB/E7C,EAAOC,QAAU,CAAC,UAAY,2B,oBCA9BD,EAAOC,QAAU,CAAC,YAAc,gC,gBCAhCD,EAAOC,QAAU,CAAC,OAAS,6BAA6B,YAAc,oC,wCCK/D,IAAKC,EANZ,oE,SAMYA,K,mCAAAA,M,KAIZ,IAA+CE,EAclCgD,GAdkChD,EAcyCF,EAAamD,YAd1C,SAAChD,GAAD,MAAiB,CAACD,OAAMC,c,gBCVnFL,EAAOC,QAAU,IAA0B,8C,kBCC3CD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,YAAc,iC,gBCDhCD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yD,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,iKCYvBqD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,ICJMxD,E,qCCNRyD,EAAe,CACfC,MAAO,CACH,CAACC,GAAIC,iBAAQC,QAAS,qBAAsBC,YAAa,KACzD,CAACH,GAAIC,iBAAQC,QAAS,6DAA8DC,YAAa,MAErGzC,QAAS,KACTzC,OAAQ,GACRmF,uBAAwB,I,QCTxBN,EAAe,CACfO,QAAS,CACL,CAACL,GAAIC,iBAAQK,KAAM,QACnB,CAACN,GAAIC,iBAAQK,KAAM,SACnB,CAACN,GAAIC,iBAAQK,KAAM,UACnB,CAACN,GAAIC,iBAAQK,KAAM,WAEvBC,SAAU,CACN,CAACP,GAAIC,iBAAQC,QAAS,MACtB,CAACF,GAAIC,iBAAQC,QAAS,iBACtB,CACIF,GAAIC,iBACJC,QAAS,8KAEb,CAACF,GAAIC,iBAAQC,QAAS,Q,wCFNlB7D,K,sBAAAA,E,0BAAAA,E,4BAAAA,E,0CAAAA,E,wCAAAA,E,8CAAAA,E,mEAAAA,M,KAUZ,IGjBYA,EHiBNC,EAAa,SAA4BC,GAA5B,OAAwC,SAACC,GAAD,MAAiB,CAACD,OAAMC,aActEgE,EAAclE,EAAsDD,EAAaoE,QAEjFC,EAAgBpE,EAAwDD,EAAasE,UAKrFC,EAAatE,EAAwDD,EAAawE,WAKlFC,EAAmBxE,EAAqED,EAAa0E,kBAKrGC,EAAyB1E,EAA0ED,EAAa4E,iBAKhHC,EAAqB5E,EAAyED,EAAa8E,oBAM3GC,EAA4B9E,EAA0FD,EAAagF,8BAQnIC,EAAa,SAACpH,EAAqBC,GAAtB,8CAAsD,WAAOqD,GAAP,eAAAC,EAAA,6DAE5ED,EAAS0D,EAAmB,CAACK,YAAY,KACzC/D,EAASsD,EAAiB,CAAC5G,iBAHiD,SAK3DF,IAASC,SAASC,EAAaC,GAL4B,OAKxEI,EALwE,OAO5EiD,EAAS0D,EAAmB,CAACK,YAAY,KACzC/D,EAASoD,EAAW,CAACY,MAAOjH,EAAKkH,SACjCjE,EAASwD,EAAuB,CAACU,gBAAiBnH,EAAKoH,cATqB,2CAAtD,uDAcpBC,EAAkB,uCAAG,WAAOpE,EAAoB/C,EAAgBoH,EAAgBC,GAA3D,SAAArE,EAAA,6DACvBD,EAAS4D,EAA0B,CAACG,YAAY,EAAM9G,YAD/B,SAGFoH,EAAUpH,GAHR,OAIU,IAJV,OAIVF,KAAKsD,YACdL,EAASsE,EAAc,CAACrH,YAE5B+C,EAAS4D,EAA0B,CAACG,YAAY,EAAO9G,YAPhC,2CAAH,4DIvFXsH,EAAsB,SAACN,EAAmBO,EAAgBC,EAAkBC,GAErF,OAAOT,EAAMU,KAAI,SAAAC,GAAI,OAAIA,EAAKH,KAAiBD,EAAtB,2BACfI,GAASF,GACbE,MCENtC,EAAe,CACf0B,MAAO,GACPrH,SAAU,GACVuH,gBAAiB,EACjBxH,YAAa,EACbqH,YAAY,EACZc,oBAAqB,K,SFNbhG,K,6CAAAA,E,uDAAAA,E,gDAAAA,M,KAMZ,IGRYA,EHQNC,EAAa,SAA4BC,GAA5B,OAAwC,SAACC,GAAD,MAAiB,CAACD,OAAMC,aAiBtE8F,EAAoBhG,EAAoED,EAAakG,oBACrGC,EAAyBlG,EAAyED,EAAaoG,yBAC/GC,EAAqBpG,EAAgED,EAAasG,qBAQlGC,EAAoB,yDAAiB,WAAOpF,GAAP,uBAAAC,EAAA,sEAC7BhC,IAAQC,kBADqB,OAC1CnB,EAD0C,SAErBA,EAAKA,KAAzBqB,EAFyC,EAEzCA,MAAOoE,EAFkC,EAElCA,GAAIrE,EAF8B,EAE9BA,MACZpB,EAAKsD,aAAepE,IAAYoJ,SAChCrF,EAAS8E,EAAkB,CAAC1G,QAAOoE,KAAIrE,QAAOmH,QAAQ,KAJZ,2CAAjB,uDA6BpBC,EAAgB,yDAAiB,WAAOvF,GAAP,eAAAC,EAAA,sEACnBxB,IAAYC,eADO,OACpC8G,EADoC,OAE1CxF,EAASgF,EAAuB,CAACS,WAAYD,EAASzI,KAAK2I,OAFjB,2CAAjB,uDInEzBpD,EAAe,CACfE,GAAI,KACJrE,MAAO,KACPC,MAAO,KACPkH,QAAQ,EACRG,WAAY,KACZE,MAAO,I,kBDHC9G,K,uDAAAA,M,KAIZ,IAWa+G,EAA0B,iBAAO,CAAC7G,KAAMF,EAAagH,0BElB9DvD,EAAe,CACfwD,aAAa,G,QCMbC,EAAcC,YAAgB,CAC9BC,YRU0B,WAGF,IAFxBC,EAEuB,uDAFf5D,EACR6D,EACuB,uCAEvB,OAAQA,EAAOpH,MACX,KAAKF,IAAaK,SACd,OAAO,2BACAgH,GADP,IAEI3D,MAAM,CAAD,yBACAC,GAAIC,kBAAW0D,EAAOnH,SADtB,IAC+B2D,YAAa,KAD5C,mBAEEuD,EAAM3D,UAGrB,KAAK1D,IAAaO,SACd,OAAO,2BACA8G,GADP,IAEI3D,MAAO2D,EAAM3D,MAAMoC,KACf,SAAAvH,GAAI,OAAIA,EAAKoF,KAAO2D,EAAOnH,QAAQoH,OAA3B,2BACEhJ,GADF,IACQuF,YAAavF,EAAKuF,YAAc,IAC1CvF,OAGlB,KAAKyB,IAAaS,YACd,OAAO,2BACA4G,GADP,IAEI3D,MAAO2D,EAAM3D,MAAM8D,QAAO,SAAAjJ,GAAI,OAAIA,EAAKoF,KAAO2D,EAAOnH,QAAQoH,YAErE,KAAKvH,IAAaW,iBAClB,KAAKX,IAAaa,gBACd,OAAO,2BACAwG,GACAC,EAAOnH,SAElB,KAAKH,IAAaiB,eACd,OAAO,2BACAoG,GADP,IAEIhG,QAAQ,2BAAKgG,EAAMhG,SAAYiG,EAAOnH,WAE9C,KAAKH,IAAae,eACd,OAAO,2BACAsG,GADP,IAEIhG,QAAQ,2BAAKgG,EAAMhG,SAAZ,IAAqBK,OAAQ4F,EAAOnH,YAEnD,QACI,OAAOkH,IQtDfI,YPa0B,WAA6E,IAA5EJ,EAA2E,uDAAnE5D,EAAc6D,EAAqD,uCAEtG,OAAQA,EAAOpH,MACX,KAAKF,IAAamD,YACd,OAAO,2BACAkE,GADP,IAEInD,SAAS,GAAD,mBACDmD,EAAMnD,UADL,cAEHP,GAAIC,kBAAW0D,EAAOnH,aAInC,QACI,OAAOkH,IOzBfK,UJIwB,WAAqE,IAApEL,EAAmE,uDAA3D5D,EAAc6D,EAA6C,uCAC5F,OAAQA,EAAOpH,MACX,KAAKF,EAAaoE,OACd,OAAO,2BACAiD,GADP,IAEIlC,MAAOO,EAAoB2B,EAAMlC,MAAOmC,EAAOnH,QAAQ/B,OAAQ,KAAM,CAACuJ,UAAU,MAGxF,KAAK3H,EAAasE,SACd,OAAO,2BACA+C,GADP,IAEIlC,MAAOO,EAAoB2B,EAAMlC,MAAOmC,EAAOnH,QAAQ/B,OAAQ,KAAM,CAACuJ,UAAU,MAGxF,KAAK3H,EAAawE,UACd,OAAO,2BAAI6C,GAAX,IAAkBlC,MAAM,YAAKmC,EAAOnH,QAAQgF,SAGhD,KAAKnF,EAAa0E,iBAClB,KAAK1E,EAAa4E,gBAClB,KAAK5E,EAAa8E,mBACd,OAAO,2BAAIuC,GAAUC,EAAOnH,SAChC,KAAKH,EAAagF,6BACd,OAAO,2BACAqC,GADP,IACcrB,oBAAqBsB,EAAOnH,QAAQ+E,WAAf,sBACrBmC,EAAMrB,qBADe,CACMsB,EAAOnH,QAAQ/B,SAC9CiJ,EAAMrB,oBAAoBwB,QAAO,SAAA7D,GAAE,OAAIA,IAAO2D,EAAOnH,QAAQ/B,YAG3E,QACI,OAAOiJ,IIjCfO,KFDuB,WAAoE,IAAnEP,EAAkE,uDAA1D5D,EAAc6D,EAA4C,uCAE1F,OAAQA,EAAOpH,MACX,KAAKF,EAAakG,mBAClB,KAAKlG,EAAaoG,wBAClB,KAAKpG,EAAasG,oBACd,OAAO,2BACAe,GACAC,EAAOnH,SAElB,QACI,OAAOkH,IETfQ,IDNsB,WAAkE,IAAjER,EAAgE,uDAAxD5D,EAAc6D,EAA0C,uCAEvF,OAAQA,EAAOpH,MACX,KAAKF,EAAagH,wBACd,OAAO,2BACAK,GADP,IAEIJ,aAAa,IAGrB,QACI,OAAOI,MCCfS,EAAQC,YAAe,CACvBC,QAASd,EACTe,WAAY,SAAAC,GAAoB,OAAIA,IAAuBC,QAAQC,QAGxDN,IAIfzE,OAAOyE,MAAQA,E,4CCjBAO,MARf,WACI,OACI,sCCMOC,MARf,WACI,OACI,uC,0BCgBOC,OAjBf,WACI,OACI,kBAACvG,GAAA,EAAD,KACI,yBAAKH,UAAWC,IAAQ0G,UAAxB,WAEI,yBAAK3G,UAAWC,IAAQ2G,OACpB,yBAAK5G,UAAWC,IAAQ4G,YACpB,yBAAK7G,UAAWC,IAAQ6G,iBACxB,yBAAK9G,UAAWC,IAAQ8G,sB,yDCmDjCC,GArDyB,SAAC,GAA8D,IAA7DhL,EAA4D,EAA5DA,YAAaiL,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,iBAExEC,EAAaC,KAAKC,KAAKJ,EAAaD,GACpCM,EAAYvL,EAAc,EAC1BwL,EAAWxL,EAAc,EACzByL,EAAQ,GAERF,GAAa,IAAGA,EAAY,GAC5BC,GAAYJ,IAAYI,EAAWJ,GAEvC,IAAK,IAAIM,EAAIH,EAAWG,GAAKF,EAAUE,IACnCD,EAAME,KAAKD,GAWf,OACI,yBAAK1H,UAAWC,KAAQ2H,YACpB,4BAAQ5H,UAAWC,KAAQ4H,gBACnBC,SAAwB,IAAd9L,EACV+L,QAZQ,WAChB/L,EAAY,GAAImL,EAAiBnL,EAAc,KAS/C,QAIA,yBAAKgE,UAAWC,KAAQ+H,mBACnBhM,EAAc,GAAK,oCACpB,4BAAQgE,UAAS,UAAKC,KAAQ4H,gBAAb,YAAgC,IAAM7L,EAAciE,KAAQgI,uBAAyB,IACjGF,QAAS,kBAAMZ,EAAiB,KAAK,GACtC,yBAAKnH,UAAWC,KAAQiI,mBAAxB,QAGHT,EAAMxD,KAAI,SAAAkE,GAAK,OAAI,4BAChBC,IAAKD,EACLnI,UAAS,UAAKC,KAAQ4H,gBAAb,YAAgCM,IAAUnM,EAAciE,KAAQgI,uBAAyB,IAClGF,QAAS,kBAAMZ,EAAiBgB,KAASA,MAC5CnM,EAAcoL,EAAa,GAAK,oCAC7B,yBAAKpH,UAAWC,KAAQiI,mBAAxB,OACA,4BAAQlI,UAAS,UAAKC,KAAQ4H,gBAAb,YAAgCT,IAAepL,EAAciE,KAAQgI,uBAAyB,IAC/GF,QAAS,kBAAMZ,EAAiBC,KAAcA,KAItD,4BAAQpH,UAAWC,KAAQ4H,gBACnBC,SAAU9L,IAAcoL,EACxBW,QA9BQ,WAChB/L,EAAYoL,GAAaD,EAAiBnL,EAAc,KA2BxD,U,wCCdGqM,GA7BmB,SAAC,GAAuD,IAAtDC,EAAqD,EAArDA,SAAUnE,EAA2C,EAA3CA,oBAAqB1H,EAAsB,EAAtBA,OAAQH,EAAc,EAAdA,SACvE,OACI,yBAAK0D,UAAWC,KAAQsI,SAAUH,IAAKE,EAASxG,IAC5C,yBAAK9B,UAAWC,KAAQuI,uBACpB,kBAAC,IAAD,CAASC,GAAI,YAAcH,EAASxG,IAChC,yBAAK4G,IAA+B,OAA1BJ,EAASzI,OAAO8I,MAAiBL,EAASzI,OAAO8I,MAAQC,KAC9DC,IAAI,MAEb,6BACKP,EAASxC,SACJ,4BAAQ9F,UAAWC,KAAQ6I,UACnBhB,SAAU3D,EAAoB4E,MAAK,SAAAjH,GAAE,OAAIA,IAAOwG,EAASxG,MACzDiG,QAAS,kBAAMzL,EAASgM,EAASxG,MAAM,YAC/C,4BAAQ9B,UAAWC,KAAQ6I,UACnBhB,SAAU3D,EAAoB4E,MAAK,SAAAjH,GAAE,OAAIA,IAAOwG,EAASxG,MACzDiG,QAAS,kBAAMtL,EAAO6L,EAASxG,MAAM,YAG3D,yBAAK9B,UAAWC,KAAQ+I,gBAEpB,6BAAMV,EAASxG,IACf,yBAAK9B,UAAWC,KAAQgJ,uBAAwBX,EAASlG,MACzD,yBAAKpC,UAAWC,KAAQiJ,qBAAsBZ,EAASvL,WCqBxDoM,GApCqB,SAAC,GAC8C,IAD7C7M,EAC4C,EAD5CA,SAAUG,EACkC,EADlCA,OAAQ0H,EAC0B,EAD1BA,oBAAqBiF,EACK,EADLA,oBAC1DnN,EAA+D,EAA/DA,SAAUuH,EAAqD,EAArDA,gBAAiBxH,EAAoC,EAApCA,YAAaqH,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,MACnE,OACI,kBAACnD,GAAA,EAAD,KACI,yBAAKH,UAAWC,KAAQ4F,WACpB,yBAAK7F,UAAWC,KAAQoJ,YACpB,kBAAC,GAAD,CAAYrN,YAAaA,EACbiL,YAAahL,EACbiL,WAAY1D,EACZ2D,iBAAkBiC,KAGjC/F,EACK,kBAACtD,GAAA,EAAD,MACA,6BACGuD,EAAMW,KAAI,SAAAqF,GAAI,OACX,kBAAC,GAAD,CAAMhB,SAAUgB,EACVlB,IAAKkB,EAAKxH,GACVrF,OAAQA,EACRH,SAAUA,EACV6H,oBAAqBA,OAG/B,yBAAKnE,UAAWC,KAAQoJ,YACpB,kBAAC,GAAD,CAAYrN,YAAaA,EACbiL,YAAahL,EACbiL,WAAY1D,EACZ2D,iBAAkBiC,SCA3CG,GAvCkB,WAE7B,IAAMjK,EAAWkK,eAFkB,EAU/BC,cAA2C,SAAAjE,GAAK,OAAIA,EAAMK,aAN1DvC,EAJ+B,EAI/BA,MACArH,EAL+B,EAK/BA,SACAuH,EAN+B,EAM/BA,gBACAxH,EAP+B,EAO/BA,YACAqH,EAR+B,EAQ/BA,WACAc,EAT+B,EAS/BA,oBAGJuF,qBAAU,WACNpK,EAAS8D,EAAWpH,EAAaC,MAClC,CAACA,EAAUD,IAGd,IAAMoN,EAAsBO,uBAAY,SAACC,GACrCtK,EAAS8D,EAAWwG,EAAY3N,MAClC,CAACA,IAEG4N,EAAgBF,uBAAY,SAACpN,GAC/B+C,EhBoEgB,SAAC/C,GAAD,OAA+B,SAAC+C,GACpDoE,EAAmBpE,EAAU/C,EAAQT,IAASW,OAAOqN,KAAKhO,KAAWwG,IgBrExDyH,CAASxN,MACnB,IACGyN,EAAkBL,uBAAY,SAACpN,GACjC+C,EhBqEkB,SAAC/C,GAAD,OAA+B,SAAC+C,GACtDoE,EAAmBpE,EAAU/C,EAAQT,IAASQ,SAASwN,KAAKhO,KAAW0G,IgBtE1DyH,CAAW1N,MACrB,IAEH,OAAO,kBAAC,GAAD,CAAO6M,oBAAqBA,EACrBjF,oBAAqBA,EACrBnI,YAAaA,EACbqH,WAAYA,EACZG,gBAAiBA,EACjBF,MAAOA,EACPrH,SAAUA,EACVQ,OAAQoN,EACRvN,SAAU0N,K,sCCiCbE,GA1DwB,SAAC9J,GAAW,IAAD,cAEL+J,eAAlCC,EAFuC,EAEvCA,SAAUC,EAF6B,EAE7BA,aAAcC,EAFe,EAEfA,OAEzBC,EAAWF,GAAa,YAA6C,IAA3C3M,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,QACzDuC,EAAMmK,SAAS,CAAC7M,QAAOC,WAAUC,aAAYC,eAGjD,OACI,0BAAM0M,SAAUA,EAAUvK,UAAWC,KAAQuK,WACzC,yBAAKxK,UAAWC,KAAQwK,kBACpB,kBAAClK,GAAA,EAAD,CAAW6B,KAAM,QACVxB,MAAO,QACP8J,aAAcC,oBACd7J,UAAS,UAAEwJ,EAAO5M,aAAT,aAAE,EAAcsE,QACzBnB,kBAAiB,UAACyJ,EAAO5M,aAAR,aAAC,EAAcsE,SAChCrB,IAAKyJ,EAAS,CACNQ,SAAU,CAACC,OAAO,EAAM7I,QAAS,YACjC8I,QAAS,CAACD,MAAO,4CAA6C7I,QAAS,sBAG1F,yBAAKhC,UAAWC,KAAQwK,kBACpB,kBAAClK,GAAA,EAAD,CAAWlC,KAAM,WACVuC,MAAO,WACPwB,KAAM,WACNsI,aAAcC,WACd7J,UAAS,UAAEwJ,EAAO3M,gBAAT,aAAE,EAAiBqE,QAC5BnB,kBAAiB,UAACyJ,EAAO3M,gBAAR,aAAC,EAAiBqE,SACnCrB,IAAKyJ,EAAS,CACNQ,SAAU,CAACC,OAAO,EAAM7I,QAAS,YACjC+I,UAAW,CAACF,MAAO,EAAG7I,QAAS,qBAIjD5B,EAAM6E,OAAS,yBAAKjF,UAAWC,KAAQ+K,kBACnC5K,EAAM6E,OAEV7E,EAAM2E,YAAc,6BAAK,yBAAK2D,IAAKtI,EAAM2E,WAAY8D,IAAI,MACzDzI,EAAM2E,YAAc,6BACjB,kBAACxE,GAAA,EAAD,CAAW0K,YAAa,eACjBtK,IAAKyJ,EAAS,CACVQ,SAAU,CAACC,OAAO,EAAM7I,QAAS,cAErClB,UAAS,UAAEwJ,EAAOzM,eAAT,aAAE,EAAgBmE,QAC3BnB,kBAAiB,UAACyJ,EAAOzM,eAAR,aAAC,EAAgBmE,SAClCI,KAAM,aAEjB,yBAAKpC,UAAWC,KAAQiL,uBACpB,2BAAO7M,KAAM,WAAY+D,KAAM,aAAczB,IAAKyJ,IAClD,2BAAOe,QAAS,cAAhB,gBAEJ,6BACI,4BAAQ9M,KAAM,SAAU2B,UAAWC,KAAQmL,mBAA3C,YCtCDC,GAvBS,WAEpB,IAAM/L,EAAWkK,eAFS,EAGUC,cAA0C,SAAAjE,GAAK,OAAIA,EAAMO,QAAtFnB,EAHmB,EAGnBA,OAAQG,EAHW,EAGXA,WAAYE,EAHD,EAGCA,MAErBsF,EAAWZ,uBAAY,SAACxM,GAC1BmC,Ef+Be,SAAC5B,EACAC,GADD,IAECC,EAFD,wDAGCC,EAHD,qFAInB,WAAOyB,GAAP,iBAAAC,EAAA,6DACID,EAASkF,EAAmB,CAACS,MAAO,MADxC,SAEqB1H,IAAQE,MAAMC,EAAOC,EAAUC,EAAYC,GAFhE,QAEQxB,EAFR,QAGasD,aAAepE,IAAYoJ,QAChCrF,EAASoF,MAEe,KAApBrI,EAAKsD,YACLL,EAASuF,KAETI,EAAQ5I,EAAKgG,SAASiJ,OAAS,EAAIjP,EAAKgG,SAAS,GAAK,aAC1D/C,EAASkF,EAAmB,CAACS,YAVrC,2CAJmB,sDe/BNsG,CAAQpO,EAASO,MAAOP,EAASQ,SAAUR,EAASS,WAAYT,EAASU,YACnF,IAEH,OAAI+G,EACO,kBAAC,IAAD,CAAU6D,GAAI,aAIrB,yBAAKzI,UAAWC,KAAQuL,gBACpB,yBAAKxL,UAAWC,KAAQwL,cACpB,qCACA,kBAAC,GAAD,CAAWxG,MAAOA,EAAOF,WAAYA,EAAYwF,SAAUA,O,6GCT5DmB,GAT0B,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,QAAYvL,EAAW,4BAE9D,OACI,0CAAQJ,UAAWC,KAAQ2L,QAAYxL,GACnC,yBAAKJ,UAAWC,KAAQ4L,YAAanD,IAAe,UAAViD,EAAoBlO,KAAQK,KAAQ+K,IAAI,OCsB/EiD,GA1BE,WAEb,IAAMxM,EAAWkK,eAFE,EAGKC,cAA0C,SAAAjE,GAAK,OAAIA,EAAMO,QAA1EnB,EAHY,EAGZA,OAAQnH,EAHI,EAGJA,MAETsO,EAAgBpC,uBAAY,WAC9BrK,EjBiDgB,uCAAiB,WAAOA,GAAP,SAAAC,EAAA,sEACpBhC,IAAQO,SADY,cAE5B6B,aAAepE,IAAYoJ,SAChCrF,EAAS8E,EAAkB,CAACQ,QAAQ,EAAOnH,MAAO,KAAMC,MAAO,KAAMoE,GAAI,KAAMiD,WAAY,QAH1D,2CAAjB,yDiBhDjB,IAEH,OACI,yBAAK/E,UAAWC,KAAQ+L,aACnBpH,EACK,oCACE,6BAAMnH,GACN,kBAAC,GAAD,CAAakO,QAAS,SAAU5D,QAASgE,GAAzC,WAEF,oCACE,sCACA,kBAAC,GAAD,CAAaJ,QAAS,SAClB,kBAAC,IAAD,CAAS3L,UAAWC,KAAQxC,MAAOgL,GAAI,eCShDwD,GA3BkB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAE/B,OACI,yBAAKlM,UAAWC,KAAQkM,KAEpB,kBAAC,GAAD,MAEA,yBAAKnM,UAAWC,KAAQmM,YACnBF,EAASjI,KAAI,SAAAoI,GAAO,OACjB,kBAAC,IAAD,CACI5D,GAAI4D,EAAQC,OACZlE,IAAKiE,EAAQvK,GACb9B,UAAWC,KAAQiE,KACnBqI,gBAAiBtM,KAAQuM,QACzB,yBAAKxM,UAAWC,KAAQwM,YACpB,yBAAK/D,IAAK2D,EAAQK,KAAM7D,IAAI,MAEhC,yBAAK7I,UAAWC,KAAQ0M,YACnBN,EAAQO,gB,wHCXjCV,GAAgC,CAChC,CAACpK,GAAIC,iBAAQuK,OAAQ,WAAYI,KAAMG,KAASD,QAAS,WACzD,CAAC9K,GAAIC,iBAAQuK,OAAQ,YAAaI,KAAMI,KAAMF,QAAS,YACvD,CAAC9K,GAAIC,iBAAQuK,OAAQ,SAAUI,KAAMvD,KAAOyD,QAAS,SACrD,CAAC9K,GAAIC,iBAAQuK,OAAQ,QAASI,KAAMlG,KAAMoG,QAAS,QACnD,CAAC9K,GAAIC,iBAAQuK,OAAQ,SAAUI,KAAMjG,KAAOmG,QAAS,SACrD,CAAC9K,GAAIC,iBAAQuK,OAAQ,YAAaI,KAAMhG,KAAUkG,QAAS,aAWhDG,GARM,WAEb,OACI,kBAAC,GAAD,CAAKb,SAAUA,MCbZc,GAVqB,SAAC,GAAgB,IAAf1M,EAAc,EAAdA,SAKlC,OAFemJ,cAAoC,SAAAjE,GAAK,OAAIA,EAAMO,KAAKnB,UAIhE,oCAAGtE,GAFU,kBAAC,IAAD,CAAUmI,GAAI,YCGhCwE,GAAmBzM,IAAM0M,MAAK,kBAAM,iCACpCC,GAAmB3M,IAAM0M,MAAK,kBAAM,uDAoD3BE,GAhDO,WAElB,IAAM9N,EAAWkK,eACX6D,EAAO5D,cAAoC,SAAAjE,GAAK,OAAIA,EAAMQ,IAAIZ,eAEpEsE,qBAAU,WAGN,OAFApK,GlBCwC,SAACA,GAE7C,IAAIgO,EAAmBhO,EAASoF,KAChC6I,QAAQC,IAAI,CAACF,IACRnR,MAAK,WACFmD,EAAS4F,WkBLb1D,OAAOiM,iBAAiB,qBAAsBC,GACvC,WACHlM,OAAOmM,oBAAoB,qBAAsBD,OAIzD,IAAMA,EAA0B,SAACJ,GAC7BM,MAAM,uBAIV,OAAKP,EAKD,yBAAKrN,UAAU,eACX,kBAAC,GAAD,MACA,yBAAKA,UAAU,uBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO6N,KAAK,oBAAoBC,OAAQ,kBACpC,kBAAC,IAAMC,SAAP,CAAgBC,SAAU,kBAACjO,GAAA,EAAD,OACtB,kBAAC,GAAD,KAAmB,kBAACoN,GAAD,WAG3B,kBAAC,IAAD,CAAOU,KAAK,YAAYC,OAAQ,kBAC5B,kBAAC,IAAMC,SAAP,CAAgBC,SAAU,kBAACjO,GAAA,EAAD,OACtB,kBAAC,GAAD,KAAmB,kBAACkN,GAAD,WAE3B,kBAAC,IAAD,CAAOY,KAAK,SAASI,UAAW1E,KAChC,kBAAC,IAAD,CAAOsE,KAAK,QAAQI,UAAWzH,IAC/B,kBAAC,IAAD,CAAOqH,KAAK,SAASI,UAAWxH,IAChC,kBAAC,IAAD,CAAOoH,KAAK,YAAYI,UAAWvH,KACnC,kBAAC,IAAD,CAAOmH,KAAK,SAASI,UAAWC,KAChC,kBAAC,IAAD,CAAOL,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,IAAD,CAAUrF,GAAI,kBAtBjD,kBAAC1I,GAAA,EAAD,OC5BfoO,IAASL,OACL,kBAAC,IAAMM,WAAP,KACI,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAUnI,MAAOA,GACb,kBAAC,GAAD,SAIZoI,SAASC,eAAe,S1ByHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtS,MAAK,SAAAuS,GACJA,EAAaC,gBAEdC,OAAM,SAAA3J,GACL4J,QAAQ5J,MAAMA,EAAMjD,c","file":"static/js/main.e2b91d78.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {UserType, ProfileType, ContactsType} from \"../types/types\";\r\n\r\nlet instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        'api-key': '2dece0c4-7aed-430e-aeba-9f10430f969a',\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 10) {\r\n        return instance.get<GetUsersResponseType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(res => res.data)\r\n    },\r\n    unfollow(userId: string) {\r\n        return instance.delete<ResponseType>(`follow/${userId}`)\r\n    },\r\n    follow(userId: string) {\r\n        return instance.post<ResponseType>(`follow/${userId}`)\r\n    }\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n            .then(res => res.data)\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get<string>(`profile/status/${userId}`)\r\n            .then(res => res.data)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<ResponseType>(`profile/status`, {status})\r\n            .then(res => res.data)\r\n    },\r\n    savePhoto(file: any) {\r\n        let formData = new FormData()\r\n        formData.append(\"image\", file)\r\n        return instance.put<ResponseType<ProfileType>>(`profile/photo`, formData)\r\n            .then(res => res.data)\r\n    },\r\n    updateProfile(data: UpdateProfileRequestType) {\r\n        return instance.put<ResponseType>(`profile`, data)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuthUserData() {\r\n        return instance.get<ResponseType<AuthUserData>>(`auth/me/`)\r\n            .then(res => res.data);\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: string | null = null) {\r\n        return instance.post<ResponseType<{ userId: number }>>(`auth/login`, {email, password, rememberMe, captcha})\r\n            .then(res => res.data);\r\n    },\r\n    logout() {\r\n        return instance.delete<ResponseType>(`auth/login`)\r\n            .then(res => res.data);\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    },\r\n\r\n}\r\n\r\n\r\nexport enum ResultCodes {\r\n    Success = 0,\r\n    Error = 1,\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport type UpdateProfileRequestType = {\r\n    userId: string\r\n    lookingForAJob: boolean\r\n    aboutMe: string | null\r\n    lookingForAJobDescription: string | null\r\n    fullName: string\r\n    contacts: ContactsType\r\n}\r\n\r\n\r\n\r\ntype GetUsersResponseType = {\r\n    items: UserType[],\r\n    totalCount: number,\r\n    error: string | null\r\n}\r\n\r\ntype AuthUserData = {\r\n    email: string\r\n    id: string\r\n    login: string\r\n}\r\n\r\ntype ResponseType<T = {}> = {\r\n    data: T\r\n    fieldsErrors: string[]\r\n    messages: string[]\r\n    resultCode: number\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__axw63\",\"pagination__pages\":\"Pagination_pagination__pages__1AjSN\",\"pagination__btn\":\"Pagination_pagination__btn__1tOGL\",\"pagination__btn_active\":\"Pagination_pagination__btn_active__yBZ7o\",\"pagination__space\":\"Pagination_pagination__space__2AOaO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__2XEeo\",\"loginWrapper\":\"Login_loginWrapper__2N1X_\",\"loginForm\":\"Login_loginForm__1OCug\",\"loginForm__button\":\"Login_loginForm__button__3oojF\",\"loginForm__field\":\"Login_loginForm__field__2jphf\",\"loginForm__rememberMe\":\"Login_loginForm__rememberMe__2RAMu\",\"formSummaryError\":\"Login_formSummaryError__7uTS4\"};","import {ProfileType, PhotosType} from \"../../../types/types\";\r\nimport {profileAPI, UpdateProfileRequestType} from \"../../../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {RootStateType} from \"../../redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\n\r\nexport enum ACTIONS_TYPE {\r\n    ADD_POST = \"Profile/ADD-POST\",\r\n    ADD_LIKE = \"Profile/ADD-LIKE\",\r\n    DELETE_POST = \"Profile/DELETE_POST\",\r\n    SET_USER_PROFILE = \"Profile/SET_USER_PROFILE\",\r\n    SET_USER_STATUS = \"Profile/SET_USER_STATUS\",\r\n    SET_USER_PHOTO = \"Profile/SET_USER_PHOTO\",\r\n    UPDATE_PROFILE = \"Profile/UPDATE_PROFILE\"\r\n}\r\n\r\nconst makeAction = <T extends ACTIONS_TYPE, P>(type: T) => (payload: P) => ({type, payload})\r\n\r\ninterface IStringMap<T> {\r\n    [key: string]: T\r\n}\r\n\r\ntype IAnyFunction = (...args: any[]) => any;\r\n\r\ntype IActionUnion<A extends IStringMap<IAnyFunction>> = ReturnType<A[keyof A]>;\r\n\r\n//              Profile page ACTIONS\r\n//\r\n//\r\n//\r\n//\r\n//\r\n\r\nexport type AddPostPayloadType = {\r\n    message: string\r\n}\r\nexport const addPostAC = makeAction<ACTIONS_TYPE.ADD_POST, AddPostPayloadType>(ACTIONS_TYPE.ADD_POST)\r\n\r\nexport type AddLikePayloadType = {\r\n    postId: string\r\n}\r\nexport const addLikeAC = makeAction<ACTIONS_TYPE.ADD_LIKE, AddLikePayloadType>(ACTIONS_TYPE.ADD_LIKE)\r\n\r\nexport type DeletePostPayloadType = {\r\n    postId: string\r\n}\r\nexport const deletePostAC = makeAction<ACTIONS_TYPE.DELETE_POST, DeletePostPayloadType>(ACTIONS_TYPE.DELETE_POST)\r\n\r\nexport type SetUserProfilePayloadType = {\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfileAC = makeAction<ACTIONS_TYPE.SET_USER_PROFILE, SetUserProfilePayloadType>(ACTIONS_TYPE.SET_USER_PROFILE)\r\n\r\nexport type setUserStatusPayloadType = {\r\n    status: string\r\n}\r\nexport const setUserStatusAC = makeAction<ACTIONS_TYPE.SET_USER_STATUS, setUserStatusPayloadType>(ACTIONS_TYPE.SET_USER_STATUS)\r\n\r\nexport const setPhotoAC = makeAction<ACTIONS_TYPE.SET_USER_PHOTO, PhotosType>(ACTIONS_TYPE.SET_USER_PHOTO)\r\n\r\nexport const updateProfileAC = makeAction<ACTIONS_TYPE.UPDATE_PROFILE, UpdateProfileRequestType >(ACTIONS_TYPE.UPDATE_PROFILE)\r\n\r\n//              Profile page THUNKS\r\n\r\ntype GetStateType = () => RootStateType\r\ntype DispatchType = Dispatch<ProfilePageActionTypes>\r\ntype ThunkType = ThunkAction<void, RootStateType, unknown, ProfilePageActionTypes>\r\n\r\n\r\nexport const getUserProfileTC = (userId: string): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfileAC({profile: data}))\r\n}\r\n\r\nexport const getStatusTC = (userId: string): ThunkType => async (dispatch) => {\r\n    let status = await profileAPI.getStatus(userId)\r\n    dispatch(setUserStatusAC({status}))\r\n}\r\n\r\nexport const updateStatusTC = (status: string): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.updateStatus(status)\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserStatusAC({status}))\r\n    }\r\n}\r\nexport const savePhotoTC = (file: any): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.savePhoto(file)\r\n    if (data.resultCode === 0) {\r\n        dispatch(setPhotoAC(data.data.photos))\r\n    }\r\n}\r\nexport const updateProfileTC = (data: UpdateProfileRequestType): ThunkType => async (dispatch) => {\r\n    let res = await profileAPI.updateProfile(data)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(updateProfileAC(data))\r\n    }\r\n}\r\n\r\nconst ProfilePageActions = {\r\n    addPostAC,\r\n    addLikeAC,\r\n    deletePostAC,\r\n    setUserProfileAC,\r\n    setUserStatusAC,\r\n    setPhotoAC,\r\n    updateProfileAC,\r\n}\r\n\r\nexport type ProfilePageActionTypes = IActionUnion<typeof ProfilePageActions>\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userCard\":\"User_userCard__1UrXa\",\"userCard__authorPhoto\":\"User_userCard__authorPhoto__3XZ-U\",\"userCard__body_header\":\"User_userCard__body_header__2uRYE\",\"userCard__body_text\":\"User_userCard__body_text__1xpkd\",\"followBtn\":\"User_followBtn__Wt2fL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__gGHbY\",\"nav__items\":\"Nav_nav__items__19iZi\",\"item\":\"Nav_item__1iOrL\",\"active\":\"Nav_active__3HRda\",\"item__icon\":\"Nav_item__icon__17QVF\",\"item__name\":\"Nav_item__name__5TzBU\"};","import React from \"react\";\r\nimport classes from \"./Preloader.module.scss\";\r\n\r\nexport function Preloader() {\r\n    return (\r\n        <div className={classes.ldsFacebook}>\r\n            <div></div><div></div><div></div>\r\n        </div>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Settings_block__1gfy1\",\"block__row\":\"Settings_block__row__3hXC9\",\"block__element\":\"Settings_block__element__2d0ze\",\"block__content\":\"Settings_block__content__1y-rT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"FormInput_input__IFXDs\",\"input__label\":\"FormInput_input__label__1RUpY\",\"input__elem\":\"FormInput_input__elem__3J9Kq\",\"input__error\":\"FormInput_input__error__5yCmM\",\"inputs__error_text\":\"FormInput_inputs__error_text__1d2rs\"};","import React from \"react\";\r\nimport classes from './Wrapper.module.scss'\r\n\r\nfunction Wrapper(props: any) {\r\n    return (\r\n        <div className={classes.wrapper}>{props.children}</div>\r\n    )\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport classes from \"./FormInput.module.css\";\r\n\r\ninterface PropsType extends React.DetailedHTMLProps<\r\n    React.InputHTMLAttributes<HTMLInputElement>,\r\n    HTMLInputElement\r\n    > {\r\n    label?: string\r\n    errorText?: string | undefined\r\n    errorCondition?: boolean\r\n}\r\n\r\nexport const FormInput = React.memo(React.forwardRef<HTMLInputElement, PropsType>(\r\n    ({label, errorCondition, errorText,  ...rest }, ref) => {\r\n\r\n        return (\r\n            <div className={classes.input}>\r\n                <p className={classes.input__label}>{label}</p>\r\n                <input className={`${classes.input__elem} ${errorCondition ? classes.input__error : \"\"}`}\r\n                       ref={ref}\r\n                       {...rest}/>\r\n                {errorCondition ? <div\r\n                    className={classes.inputs__error_text}>{errorText}</div> : null}\r\n            </div>\r\n        )\r\n    }))\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"Users_usersPage__1fI9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__info\":\"LoginNav_login__info__1Y7tk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"LogoutButton_button__2_TrE\",\"button__img\":\"LogoutButton_button__img__IVXVe\"};","//              Dialogs page ACTIONS\r\n//\r\n//\r\n//\r\n//\r\n//\r\nexport enum ACTIONS_TYPE {\r\n    ADD_MESSAGE = \"Dialogs/ADD-MESSAGE\",\r\n}\r\n\r\nconst makeAction = <T extends ACTIONS_TYPE, P>(type: T) => (payload: P) => ({type, payload})\r\n\r\ninterface IStringMap<T> {\r\n    [key: string]: T\r\n}\r\n\r\ntype IAnyFunction = (...args: any[]) => any;\r\n\r\ntype IActionUnion<A extends IStringMap<IAnyFunction>> = ReturnType<A[keyof A]>;\r\n\r\n\r\nexport type AddMessagePayloadType = {\r\n    message: string\r\n}\r\nexport const addMessageAC = makeAction<ACTIONS_TYPE.ADD_MESSAGE, AddMessagePayloadType>(ACTIONS_TYPE.ADD_MESSAGE)\r\n\r\nconst DialogsPageActions = {\r\n    addMessageAC\r\n}\r\n\r\nexport type DialogsActionTypes = IActionUnion<typeof DialogsPageActions>\r\n","module.exports = __webpack_public_path__ + \"static/media/userDefaultPhoto.f8a15e74.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Wrapper_wrapper__3qo1w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsFacebook\":\"Preloader_ldsFacebook__3PKgV\"};","module.exports = __webpack_public_path__ + \"static/media/File-Import-Outline.f41b3872.svg\";","module.exports = __webpack_public_path__ + \"static/media/File-Export-Outline.dbbedafc.svg\";","module.exports = __webpack_public_path__ + \"static/media/Profile-Outline.ae74fdec.svg\";","module.exports = __webpack_public_path__ + \"static/media/Chat-Outline.8256a581.svg\";","module.exports = __webpack_public_path__ + \"static/media/Profile-GroupFriend-Outline.ef43f0c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/Documents-Outline.9384302f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Play-Outline.837b9fa1.svg\";","module.exports = __webpack_public_path__ + \"static/media/Setting-Outline.b175e07d.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","//              Users ACTIONS\r\n//\r\n//\r\n//\r\n//\r\n//\r\n\r\n\r\nimport {UserType} from \"../../../types/types\";\r\nimport {usersAPI} from \"../../../api/api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {RootStateType} from \"../../redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport enum ACTIONS_TYPE {\r\n    FOLLOW = \"Users/FOLLOW\",\r\n    UNFOLLOW = \"Users/UNFOLLOW\",\r\n    SET_USERS = \"Users/SET_USERS\",\r\n    SET_CURRENT_PAGE = \"Users/SET_CURRENT_PAGE\",\r\n    SET_TOTAL_COUNT = \"Users/SET_TOTAL_COUNT\",\r\n    TOGGLE_IS_FETCHING = \"Users/TOGGLE_IS_FETCHING\",\r\n    TOGGLE_IS_FOLLOWING_PROGRESS = \"Users/TOGGLE_IS_FOLLOWING_PROGRESS\",\r\n}\r\n\r\nconst makeAction = <T extends ACTIONS_TYPE, P>(type: T) => (payload: P) => ({type, payload})\r\n\r\ninterface IStringMap<T> {\r\n    [key: string]: T\r\n}\r\n\r\ntype IAnyFunction = (...args: any[]) => any;\r\n\r\ntype IActionUnion<A extends IStringMap<IAnyFunction>> = ReturnType<A[keyof A]>;\r\n\r\n\r\nexport type SetFollowPayloadType = {\r\n    userId: string\r\n}\r\nexport const setFollowAC = makeAction<ACTIONS_TYPE.FOLLOW, SetFollowPayloadType>(ACTIONS_TYPE.FOLLOW)\r\n\r\nexport const setUnfollowAC = makeAction<ACTIONS_TYPE.UNFOLLOW, SetFollowPayloadType>(ACTIONS_TYPE.UNFOLLOW)\r\n\r\nexport type SetUsersPayloadType = {\r\n    users: Array<UserType>\r\n}\r\nexport const setUsersAC = makeAction<ACTIONS_TYPE.SET_USERS, SetUsersPayloadType>(ACTIONS_TYPE.SET_USERS)\r\n\r\nexport type SetCurrentPagePayloadType = {\r\n    currentPage: number\r\n}\r\nexport const setCurrentPageAC = makeAction<ACTIONS_TYPE.SET_CURRENT_PAGE, SetCurrentPagePayloadType>(ACTIONS_TYPE.SET_CURRENT_PAGE)\r\n\r\nexport type SetTotalCountOfUsersPayloadType = {\r\n    totalUsersCount: number\r\n}\r\nexport const setTotalCountOfUsersAC = makeAction<ACTIONS_TYPE.SET_TOTAL_COUNT, SetTotalCountOfUsersPayloadType>(ACTIONS_TYPE.SET_TOTAL_COUNT)\r\n\r\nexport type toggleIsFetchingPayloadType = {\r\n    isFetching: boolean\r\n}\r\nexport const toggleIsFetchingAC = makeAction<ACTIONS_TYPE.TOGGLE_IS_FETCHING, toggleIsFetchingPayloadType>(ACTIONS_TYPE.TOGGLE_IS_FETCHING)\r\n\r\nexport type toggleFollowingProgressPayloadType = {\r\n    isFetching: boolean\r\n    userId: string\r\n}\r\nexport const toggleFollowingProgressAC = makeAction<ACTIONS_TYPE.TOGGLE_IS_FOLLOWING_PROGRESS, toggleFollowingProgressPayloadType>(ACTIONS_TYPE.TOGGLE_IS_FOLLOWING_PROGRESS)\r\n\r\n\r\n//              Users THUNKS\r\ntype GetStateType = () => RootStateType\r\ntype DispatchType = Dispatch<UsersActionTypes>\r\ntype ThunkType = ThunkAction<void, RootStateType, unknown, UsersActionTypes>\r\n\r\nexport const getUsersTC = (currentPage: number, pageSize: number): ThunkType => async (dispatch) => {\r\n\r\n    dispatch(toggleIsFetchingAC({isFetching: true}))\r\n    dispatch(setCurrentPageAC({currentPage}))\r\n\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n\r\n    dispatch(toggleIsFetchingAC({isFetching: false}))\r\n    dispatch(setUsersAC({users: data.items}))\r\n    dispatch(setTotalCountOfUsersAC({totalUsersCount: data.totalCount}))\r\n\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch: Dispatch, userId: string, apiMethod: any, actionCreator: Function) => {\r\n    dispatch(toggleFollowingProgressAC({isFetching: true, userId}))\r\n\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator({userId}))\r\n    }\r\n    dispatch(toggleFollowingProgressAC({isFetching: false, userId}))\r\n}\r\n\r\nexport const followTC = (userId: string): ThunkType => (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), setFollowAC)\r\n}\r\n\r\nexport const unfollowTC = (userId: string): ThunkType => (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), setUnfollowAC)\r\n}\r\n\r\nconst UsersActions = {\r\n    setFollowAC,\r\n    toggleFollowingProgressAC,\r\n    toggleIsFetchingAC,\r\n    setTotalCountOfUsersAC,\r\n    setCurrentPageAC,\r\n    setUsersAC,\r\n    setUnfollowAC\r\n}\r\nexport type UsersActionTypes = IActionUnion<typeof UsersActions>\r\n","import {uuid} from \"uuidv4\";\r\nimport {ProfileType, PostType} from \"../../types/types\";\r\nimport {ACTIONS_TYPE, ProfilePageActionTypes} from \"./actions/profile-actions\";\r\n\r\n\r\nexport type ProfilePageStateType = typeof initialState;\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: uuid(), message: \"It's my first post\", likeCounter: 333},\r\n        {id: uuid(), message: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. \", likeCounter: 356}\r\n    ] as PostType[],\r\n    profile: null as ProfileType | null,\r\n    status: \"\",\r\n    updateProfileTextError: \"\"\r\n}\r\n\r\n\r\n\r\nexport const profileReducer = (\r\n    state = initialState,\r\n    action: ProfilePageActionTypes\r\n): ProfilePageStateType => {\r\n\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [\r\n                    {id: uuid(), ...action.payload, likeCounter: 0},\r\n                    ...state.posts,\r\n                ],\r\n            }\r\n        case ACTIONS_TYPE.ADD_LIKE:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(\r\n                    post => post.id === action.payload.postId\r\n                        ? {...post, likeCounter: post.likeCounter + 1}\r\n                        : post\r\n                )\r\n            }\r\n        case ACTIONS_TYPE.DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post.id !== action.payload.postId)\r\n            }\r\n        case ACTIONS_TYPE.SET_USER_PROFILE:\r\n        case ACTIONS_TYPE.SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case ACTIONS_TYPE.UPDATE_PROFILE:\r\n            return  {\r\n                ...state,\r\n                profile: {...state.profile, ...action.payload} as ProfileType\r\n            }\r\n        case ACTIONS_TYPE.SET_USER_PHOTO:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.payload} as ProfileType\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n//Динамическая диспетчеризация, не хватает типов, не работает\r\n// const actionObj: { [key: string]: ProfilePageStateType } = {\r\n//     [PROFILE_PAGE_ACTION_TYPE.ADD_POST]: {\r\n//         ...state,\r\n//         posts: [...state.posts, {id: uuid(), message: state.newPostText, likeCounter: 0}]\r\n//     },\r\n//     [PROFILE_PAGE_ACTION_TYPE.UPDATE_NEW_POST_TEXT]: {\r\n//         ...state,\r\n//         newPostText: action.newPostText\r\n//     },\r\n//     [PROFILE_PAGE_ACTION_TYPE.ADD_LIKE]: {\r\n//         ...state,\r\n//         posts: state.posts.map(item=>item.id===action.postId ? {...item, likeCounter: item.likeCounter+1}: item)\r\n//     },\r\n// }\r\n// return actionObj[action.type] && actionObj[action.type] || state\r\n","import {uuid} from \"uuidv4\";\r\nimport { DialogType, MessageType } from \"../../types/types\";\r\nimport {ACTIONS_TYPE, DialogsActionTypes} from \"./actions/dialogs-actions\";\r\n\r\nexport type DialogsPageStateType = typeof initialState\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: uuid(), name: \"Diko\"},\r\n        {id: uuid(), name: \"Almaz\"},\r\n        {id: uuid(), name: \"Erzhan\"},\r\n        {id: uuid(), name: \"Banzai\"}\r\n    ] as DialogType[],\r\n    messages: [\r\n        {id: uuid(), message: \"Hi\"},\r\n        {id: uuid(), message: \"How are you l\"},\r\n        {\r\n            id: uuid(),\r\n            message: \"is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took \"\r\n        },\r\n        {id: uuid(), message: \"Yo\"}\r\n    ] as MessageType[],\r\n}\r\n\r\nexport const dialogsReducer = (state = initialState, action: DialogsActionTypes): DialogsPageStateType => {\r\n\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.ADD_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messages: [\r\n                    ...state.messages,\r\n                    {id: uuid(), ...action.payload}\r\n                ],\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// const actionObj: { [key: string]: any  } = {\r\n//     [ACTION_TYPE.ADD_MESSAGE]: {\r\n//         ...state,\r\n//         messages: [...state.messages, {id: uuid(),\r\n//             message: state.newMessageText,}]\r\n//     },\r\n//     [ACTION_TYPE.UPDATE_NEW_MESSAGE_TEXT]: {\r\n//         ...state,\r\n//         newMessageText: action.newMessageText\r\n//     },\r\n// }\r\n// return actionObj[action.type] && actionObj[action.type] || state\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI, ResultCodes, securityAPI} from \"../../../api/api\";\r\nimport {FormAction} from \"redux-form\";\r\nimport {RootStateType} from \"../../redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {ProfilePageActionTypes} from \"./profile-actions\";\r\n\r\nexport enum ACTIONS_TYPE {\r\n    SET_AUTH_USER_DATA = \"Auth/SET_AUTH_USER_DATA\",\r\n    GET_CAPTCHA_URL_SUCCESS = \"Auth/GET_CAPTCHA_URL_SUCCESS\",\r\n    SET_AUTH_ERROR_TEXT = \"Auth/SET_AUTH_ERROR_TEXT\",\r\n}\r\n\r\nconst makeAction = <T extends ACTIONS_TYPE, P>(type: T) => (payload: P) => ({type, payload})\r\n\r\ninterface IStringMap<T> {\r\n    [key: string]: T\r\n}\r\n\r\ntype IAnyFunction = (...args: any[]) => any;\r\n\r\ntype IActionUnion<A extends IStringMap<IAnyFunction>> = ReturnType<A[keyof A]>;\r\n\r\ntype setAuthUserDataPayload = {\r\n    id: string | null,\r\n    login: string | null,\r\n    email: string | null,\r\n    isAuth: boolean,\r\n    captchaUrl?: string | null\r\n}\r\nexport const setAuthUserDataAC = makeAction<ACTIONS_TYPE.SET_AUTH_USER_DATA, setAuthUserDataPayload>(ACTIONS_TYPE.SET_AUTH_USER_DATA)\r\nexport const getCaptchaUrlSuccessAC = makeAction<ACTIONS_TYPE.GET_CAPTCHA_URL_SUCCESS, { captchaUrl: string }>(ACTIONS_TYPE.GET_CAPTCHA_URL_SUCCESS)\r\nexport const setAuthErrorTextAC = makeAction<ACTIONS_TYPE.SET_AUTH_ERROR_TEXT, { error: string }>(ACTIONS_TYPE.SET_AUTH_ERROR_TEXT)\r\n\r\n//Auth THUNKS\r\ntype GetStateType = () => RootStateType\r\ntype DispatchType = Dispatch<ProfilePageActionTypes>\r\ntype ThunkType = ThunkAction<void, RootStateType, unknown, AuthActionTypes | FormAction>\r\n\r\n\r\nexport const getAuthUserDataTC = (): ThunkType => async (dispatch) => {\r\n    let data = await authAPI.getAuthUserData()\r\n    let {email, id, login} = data.data\r\n    if (data.resultCode === ResultCodes.Success)\r\n        dispatch(setAuthUserDataAC({email, id, login, isAuth: true}))\r\n}\r\n//any\r\nexport const loginTC = (email: string,\r\n                        password: string,\r\n                        rememberMe: boolean = false,\r\n                        captcha: string): ThunkType =>\r\n    async (dispatch) => {\r\n        dispatch(setAuthErrorTextAC({error: \"\"}))\r\n        let data = await authAPI.login(email, password, rememberMe, captcha)\r\n        if (data.resultCode === ResultCodes.Success) {\r\n            dispatch(getAuthUserDataTC())\r\n        } else {\r\n            if (data.resultCode === 10) {\r\n                dispatch(getCaptchaUrl())\r\n            }\r\n            let error = data.messages.length > 0 ? data.messages[0] : \"Some error\"\r\n            dispatch(setAuthErrorTextAC({error}))\r\n        }\r\n    }\r\nexport const logoutTC = (): ThunkType => async (dispatch) => {\r\n    let data = await authAPI.logout()\r\n    if (data.resultCode === ResultCodes.Success)\r\n        dispatch(setAuthUserDataAC({isAuth: false, login: null, email: null, id: null, captchaUrl: null}))\r\n}\r\nexport const getCaptchaUrl = (): ThunkType => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchUrl()\r\n    dispatch(getCaptchaUrlSuccessAC({captchaUrl: response.data.url}))\r\n}\r\n\r\nconst AuthActions = {\r\n    setAuthUserDataAC,\r\n    getCaptchaUrlSuccessAC,\r\n    setAuthErrorTextAC\r\n}\r\nexport type AuthActionTypes = IActionUnion<typeof AuthActions>\r\n\r\n","\r\nexport const updateObjectInArray = (items: Array<any>, itemId: string, objPropName: any, newObjProps: any) =>{\r\n\r\n    return items.map(item => item[objPropName] === itemId\r\n        ? {...item, ...newObjProps}\r\n        : item)\r\n}\r\n\r\n\r\n","import {ACTIONS_TYPE, UsersActionTypes} from \"./actions/users-actions\";\r\nimport {UserType} from \"../../types/types\";\r\nimport {updateObjectInArray} from \"../../utils/objects-helpers\";\r\n\r\nexport type UsersStateType = typeof initialState;\r\n\r\n\r\nlet initialState = {\r\n    users: [] as UserType[],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 2,\r\n    isFetching: true,\r\n    followingInProgress: [] as string[]\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action: UsersActionTypes): UsersStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.payload.userId, \"id\", {followed: true})\r\n            }\r\n        }\r\n        case ACTIONS_TYPE.UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.payload.userId, \"id\", {followed: false})\r\n            }\r\n        }\r\n        case ACTIONS_TYPE.SET_USERS: {\r\n            return {...state, users: [...action.payload.users]}\r\n        }\r\n\r\n        case ACTIONS_TYPE.SET_CURRENT_PAGE:\r\n        case ACTIONS_TYPE.SET_TOTAL_COUNT:\r\n        case ACTIONS_TYPE.TOGGLE_IS_FETCHING:\r\n            return {...state, ...action.payload}\r\n        case ACTIONS_TYPE.TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state, followingInProgress: action.payload.isFetching\r\n                    ? [...state.followingInProgress, action.payload.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.payload.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {RootStateType} from \"../../redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {getAuthUserDataTC} from \"./auth-actions\";\r\n\r\nexport enum ACTIONS_TYPE {\r\n    SET_INITIALIZED_SUCCESS = \"App/SET_INITIALIZED_SUCCESS\",\r\n}\r\n\r\nconst makeAction = <T extends ACTIONS_TYPE, P>(type: T) => (payload: P) => ({type, payload})\r\n\r\ninterface IStringMap<T> {\r\n    [key: string]: T\r\n}\r\n\r\ntype IAnyFunction = (...args: any[]) => any;\r\n\r\ntype IActionUnion<A extends IStringMap<IAnyFunction>> = ReturnType<A[keyof A]>;\r\n\r\n// export const setInitializedSuccessAC = makeAction<ACTIONS_TYPE.SET_INITIALIZED_SUCCESS,>(ACTIONS_TYPE.SET_INITIALIZED_SUCCESS)\r\nexport const setInitializedSuccessAC = () => ({type: ACTIONS_TYPE.SET_INITIALIZED_SUCCESS})\r\n//Auth THUNKS\r\ntype GetStateType = () => RootStateType\r\ntype DispatchType = Dispatch<AppActionTypes>\r\ntype ThunkType = ThunkAction<void, RootStateType, unknown, AppActionTypes>\r\n\r\nexport const initializeAppTC = (): ThunkType => (dispatch) => {\r\n    // @ts-ignore\r\n    let promise: Promise = dispatch(getAuthUserDataTC())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(setInitializedSuccessAC())\r\n        })\r\n}\r\n\r\n\r\nconst AppActions = {\r\n    setInitializedAC: setInitializedSuccessAC\r\n}\r\nexport type AppActionTypes = IActionUnion<typeof AppActions>\r\n\r\n","import {ACTIONS_TYPE, AuthActionTypes} from \"./actions/auth-actions\";\r\n\r\nlet initialState = {\r\n    id: null as string | null,\r\n    login: null as string | null,\r\n    email: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null,\r\n    error: \"\"\r\n}\r\nexport type AuthStateType = typeof initialState;\r\n\r\nexport const authReducer = (state = initialState, action: AuthActionTypes): AuthStateType  => {\r\n\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.SET_AUTH_USER_DATA:\r\n        case ACTIONS_TYPE.GET_CAPTCHA_URL_SUCCESS:\r\n        case ACTIONS_TYPE.SET_AUTH_ERROR_TEXT:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import {ACTIONS_TYPE, AppActionTypes} from \"./actions/app-actions\";\r\n\r\nlet initialState = {\r\n    initialized: false as boolean,\r\n\r\n}\r\nexport type AppStateType = typeof initialState;\r\n\r\nexport const appReducer = (state = initialState, action: AppActionTypes): AppStateType  => {\r\n\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.SET_INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import {combineReducers} from \"redux\";\r\nimport {profileReducer} from \"./reducers/profile-page-reducer\";\r\nimport {dialogsReducer} from \"./reducers/dialogs-reducer\";\r\nimport {usersReducer} from \"./reducers/users-reducer\";\r\nimport {authReducer} from \"./reducers/auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {appReducer} from \"./reducers/app-reducer\";\r\nimport {configureStore} from \"@reduxjs/toolkit\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n})\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>\r\n\r\nlet store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunkMiddleware)\r\n});\r\n\r\nexport default store;\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n","import React from \"react\";\r\nimport classes from './News.module.scss'\r\n\r\nfunction News() {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;\r\n","import React from \"react\";\r\nimport classes from './Music.module.scss'\r\n\r\nfunction Music() {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;\r\n","import React from \"react\";\r\nimport classes from './Settings.module.scss'\r\nimport Wrapper from \"../Wrapper/Wrapper\";\r\n\r\nfunction Settings() {\r\n    return (\r\n        <Wrapper>\r\n            <div className={classes.settings}>\r\n                Settings\r\n                <div className={classes.block}>\r\n                    <div className={classes.block__row}>\r\n                        <div className={classes.block__element}></div>\r\n                        <div className={classes.block__content}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Wrapper>\r\n\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport classes from \"./Pagination.module.scss\";\r\n\r\ntype PropsType = {\r\n    totalItems: number\r\n    itemsOnPage: number\r\n    currentPage: number\r\n    changePageNumber: (page: number) => void\r\n}\r\n\r\nconst Pagination: React.FC<PropsType> = ({currentPage, itemsOnPage, totalItems, changePageNumber}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItems / itemsOnPage);\r\n    let firstPage = currentPage - 2;\r\n    let lastPage = currentPage + 2;\r\n    let pages = [];\r\n\r\n    if (firstPage <= 0) firstPage = 1\r\n    if (lastPage >= pagesCount) lastPage = pagesCount\r\n\r\n    for (let i = firstPage; i <= lastPage; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const clickPrevButton = () => {\r\n        if (currentPage>1)  changePageNumber(currentPage - 1)\r\n    }\r\n\r\n    const clickNextButton = () => {\r\n        if (currentPage<pagesCount)  changePageNumber(currentPage + 1)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.pagination}>\r\n            <button className={classes.pagination__btn}\r\n                    disabled={currentPage===1}\r\n                    onClick={clickPrevButton}>«</button>\r\n\r\n            <div className={classes.pagination__pages}>\r\n                {currentPage > 3 && <>\r\n                <button className={`${classes.pagination__btn} ${1 === currentPage ? classes.pagination__btn_active : \"\"}`}\r\n                     onClick={() => changePageNumber(1)}>{1}</button>\r\n                    <div className={classes.pagination__space}>...</div>\r\n                </>\r\n                }\r\n                {pages.map(pageN => <button\r\n                    key={pageN}\r\n                    className={`${classes.pagination__btn} ${pageN === currentPage ? classes.pagination__btn_active : \"\"}`}\r\n                    onClick={() => changePageNumber(pageN)}>{pageN}</button>)}\r\n                {currentPage < pagesCount - 4 && <>\r\n                    <div className={classes.pagination__space}>...</div>\r\n                    <button className={`${classes.pagination__btn} ${pagesCount === currentPage ? classes.pagination__btn_active : \"\"}`}\r\n                    onClick={() => changePageNumber(pagesCount)}>{pagesCount}</button>\r\n                </>}\r\n            </div>\r\n\r\n            <button className={classes.pagination__btn}\r\n                    disabled={currentPage===pagesCount}\r\n                    onClick={clickNextButton}>»</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport classes from \"./User.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userDefaultPhoto from \"../../../assets/userDefaultPhoto.png\";\r\nimport {UserType} from \"../../../types/types\";\r\n\r\ntype PropsType = {\r\n    userData: UserType\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    followingInProgress: Array<string>\r\n}\r\n\r\nconst User: React.FC<PropsType> = ({userData, followingInProgress, follow, unfollow}) => {\r\n    return (\r\n        <div className={classes.userCard} key={userData.id}>\r\n            <div className={classes.userCard__authorPhoto}>\r\n                <NavLink to={\"/profile/\" + userData.id}>\r\n                    <img src={userData.photos.small !== null ? userData.photos.small : userDefaultPhoto}\r\n                         alt=\"\"/>\r\n                </NavLink>\r\n                <div>\r\n                    {userData.followed\r\n                        ? <button className={classes.followBtn}\r\n                                  disabled={followingInProgress.some(id => id === userData.id)}\r\n                                  onClick={() => unfollow(userData.id)}>{\"unfollow\"}</button>\r\n                        : <button className={classes.followBtn}\r\n                                  disabled={followingInProgress.some(id => id === userData.id)}\r\n                                  onClick={() => follow(userData.id)}>{\"follow\"}</button>}\r\n                </div>\r\n            </div>\r\n            <div className={classes.userCard__body}>\r\n\r\n                <div>{userData.id}</div>\r\n                <div className={classes.userCard__body_header}>{userData.name}</div>\r\n                <div className={classes.userCard__body_text}>{userData.status}</div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport Wrapper from \"../Wrapper/Wrapper\";\r\nimport classes from \"./Users.module.scss\";\r\nimport {Preloader} from \"../UI/Preloader/Preloader\";\r\nimport {UserType} from \"../../types/types\";\r\nimport Pagination from \"../common/Pagination/Pagination\";\r\nimport User from \"./User/User\";\r\n\r\ntype UsersTypes = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageNumberChanged: (pageNumber: number) => void\r\n    users: UserType[]\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    isFetching: boolean\r\n    followingInProgress: Array<string>\r\n}\r\n\r\nconst Users: React.FC<UsersTypes> = ({unfollow, follow, followingInProgress, onPageNumberChanged,\r\n                   pageSize, totalUsersCount, currentPage, isFetching, users}) => {\r\n    return (\r\n        <Wrapper>\r\n            <div className={classes.usersPage}>\r\n                <div className={classes.pageButton}>\r\n                    <Pagination currentPage={currentPage}\r\n                                itemsOnPage={pageSize}\r\n                                totalItems={totalUsersCount}\r\n                                changePageNumber={onPageNumberChanged}/>\r\n\r\n                </div>\r\n                {isFetching\r\n                    ? <Preloader/>\r\n                    : <div>\r\n                        {users.map(user => (\r\n                            <User userData={user}\r\n                                  key={user.id}\r\n                                  follow={follow}\r\n                                  unfollow={unfollow}\r\n                                  followingInProgress={followingInProgress}\r\n                            />\r\n                        ))}\r\n                        <div className={classes.pageButton}>\r\n                            <Pagination currentPage={currentPage}\r\n                                        itemsOnPage={pageSize}\r\n                                        totalItems={totalUsersCount}\r\n                                        changePageNumber={onPageNumberChanged}/>\r\n\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Users;\r\n","import React, {useCallback, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport Users from \"./Users\";\r\nimport {getUsersTC, unfollowTC, followTC} from \"../../redux/reducers/actions/users-actions\";\r\nimport {UsersStateType} from \"../../redux/reducers/users-reducer\";\r\n\r\n\r\nconst UsersContainer: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {\r\n        users,\r\n        pageSize,\r\n        totalUsersCount,\r\n        currentPage,\r\n        isFetching,\r\n        followingInProgress\r\n    } = useSelector<RootStateType, UsersStateType>(state => state.usersPage)\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsersTC(currentPage, pageSize))\r\n    }, [pageSize, currentPage])\r\n\r\n\r\n    const onPageNumberChanged = useCallback((pageNumber: number) => {\r\n        dispatch(getUsersTC(pageNumber, pageSize))\r\n    },[pageSize])\r\n\r\n    const followHandler = useCallback((userId: string) => {\r\n        dispatch(followTC(userId))\r\n    }, [])\r\n    const unfollowHandler = useCallback((userId: string) => {\r\n        dispatch(unfollowTC(userId))\r\n    }, [])\r\n\r\n    return <Users onPageNumberChanged={onPageNumberChanged}\r\n                  followingInProgress={followingInProgress}\r\n                  currentPage={currentPage}\r\n                  isFetching={isFetching}\r\n                  totalUsersCount={totalUsersCount}\r\n                  users={users}\r\n                  pageSize={pageSize}\r\n                  follow={followHandler}\r\n                  unfollow={unfollowHandler}/>\r\n}\r\n\r\nexport default UsersContainer\r\n\r\n","import classes from \"../Login.module.scss\";\r\nimport React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {FormInput} from \"../../common/FormInput/FormInput\";\r\n\r\n\r\nexport type FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\ntype PropsType = {\r\n    onSubmit: (formData: FormDataType) => void\r\n    captchaUrl: string | null\r\n    error: string\r\n}\r\n\r\nconst LoginForm: React.FC<PropsType> = (props) => {\r\n\r\n    const {register, handleSubmit, errors} = useForm<FormDataType>()\r\n\r\n    const onSubmit = handleSubmit(({email, password, rememberMe, captcha}) => {\r\n        props.onSubmit({email, password, rememberMe, captcha})\r\n    })\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className={classes.loginForm}>\r\n            <div className={classes.loginForm__field}>\r\n                <FormInput name={\"email\"}\r\n                       label={\"Login\"}\r\n                       defaultValue={process.env.REACT_APP_EMAIL}\r\n                       errorText={errors.email?.message}\r\n                       errorCondition={!!errors.email?.message}\r\n                       ref={register({\r\n                               required: {value: true, message: \"required\"},\r\n                               pattern: {value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, message: \"Invalid email\"}\r\n                           })}/>\r\n            </div>\r\n            <div className={classes.loginForm__field}>\r\n                <FormInput type={\"password\"}\r\n                       label={\"Password\"}\r\n                       name={\"password\"}\r\n                       defaultValue={process.env.REACT_APP_PASSWORD}\r\n                       errorText={errors.password?.message}\r\n                       errorCondition={!!errors.password?.message}\r\n                       ref={register({\r\n                               required: {value: true, message: \"required\"},\r\n                               minLength: {value: 7, message: \"min length 7\"}\r\n                       })}/>\r\n\r\n            </div>\r\n            {props.error && <div className={classes.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            {props.captchaUrl && <div><img src={props.captchaUrl} alt=\"\"/></div>}\r\n            {props.captchaUrl && <div>\r\n                <FormInput placeholder={\"Type captcha\"}\r\n                       ref={register({\r\n                           required: {value: true, message: \"required\"}\r\n                       })}\r\n                       errorText={errors.captcha?.message}\r\n                       errorCondition={!!errors.captcha?.message}\r\n                       name={\"captcha\"}/>\r\n            </div>}\r\n            <div className={classes.loginForm__rememberMe}>\r\n                <input type={\"checkbox\"} name={\"rememberMe\"} ref={register}/>\r\n                <label htmlFor={\"rememberMe\"}>remember me</label>\r\n            </div>\r\n            <div>\r\n                <button type={\"submit\"} className={classes.loginForm__button}>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default LoginForm\r\n","import React, {useCallback} from 'react';\r\nimport classes from \"./Login.module.scss\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport {loginTC} from '../../redux/reducers/actions/auth-actions';\r\nimport LoginForm, { FormDataType } from './LoginForm/LoginForm';\r\nimport {AuthStateType} from \"../../redux/reducers/auth-reducer\";\r\n\r\n\r\nconst Login: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {isAuth, captchaUrl, error} = useSelector<RootStateType, AuthStateType>(state => state.auth)\r\n\r\n    const onSubmit = useCallback((formData: FormDataType) => {\r\n        dispatch(loginTC(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n    }, [])\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.loginContainer}>\r\n            <div className={classes.loginWrapper}>\r\n                <h2>Login</h2>\r\n                <LoginForm error={error} captchaUrl={captchaUrl} onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport classes from './LogoutButton.module.scss';\r\nimport login from \"./File-Import-Outline.svg\"\r\nimport logout from \"./File-Export-Outline.svg\"\r\n\r\ninterface PropsType extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n    btnType: \"login\" | \"logout\"\r\n}\r\n\r\nconst LoginButton: React.FC<PropsType> = ({btnType ,...props}) => {\r\n\r\n    return (\r\n        <button className={classes.button} {...props}>\r\n            <img className={classes.button__img} src={btnType===\"login\" ? login : logout} alt=\"\"/>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default LoginButton;\r\n","import React, {useCallback} from 'react';\r\nimport classes from \"./LoginNav.module.scss\";\r\nimport LoginButton from \"../../common/Buttons/LogoutButton/LogoutButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../../redux/redux-store\";\r\nimport {AuthStateType} from \"../../../redux/reducers/auth-reducer\";\r\nimport {logoutTC} from \"../../../redux/reducers/actions/auth-actions\";\r\n\r\nconst LoginNav = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {isAuth, login} = useSelector<RootStateType, AuthStateType>(state => state.auth)\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        dispatch(logoutTC())\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.login__info}>\r\n            {isAuth\r\n                ? <>\r\n                    <div>{login}</div>\r\n                    <LoginButton btnType={\"logout\"} onClick={logoutHandler}>Logout</LoginButton>\r\n                </>\r\n                : <>\r\n                    <div>Login</div>\r\n                    <LoginButton btnType={\"login\"}>\r\n                        <NavLink className={classes.login} to={\"/login\"}/>\r\n                    </LoginButton>\r\n                </>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginNav;\r\n","import React from \"react\";\r\nimport classes from './Nav.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {NavItemsType} from \"./NavContainer\";\r\nimport LoginNav from \"./LoginNav/LoginNav\";\r\n\r\ntype PropsType = {\r\n    navItems: NavItemsType[]\r\n}\r\n\r\nconst Nav: React.FC<PropsType> = ({navItems}) => {\r\n\r\n    return (\r\n        <nav className={classes.nav}>\r\n\r\n            <LoginNav />\r\n\r\n            <div className={classes.nav__items}>\r\n                {navItems.map(navItem => (\r\n                    <NavLink\r\n                        to={navItem.pathTo}\r\n                        key={navItem.id}\r\n                        className={classes.item}\r\n                        activeClassName={classes.active}>\r\n                        <div className={classes.item__icon}>\r\n                            <img src={navItem.icon} alt=\"\"/>\r\n                        </div>\r\n                        <div className={classes.item__name}>\r\n                            {navItem.navName}\r\n                        </div>\r\n                    </NavLink>))}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport Nav from \"./Nav\";\r\nimport {uuid} from \"uuidv4\";\r\nimport Profile from \"../../assets/nav/Profile-Outline.svg\";\r\nimport Chat from \"../../assets/nav/Chat-Outline.svg\";\r\nimport Users from \"../../assets/nav/Profile-GroupFriend-Outline.svg\";\r\nimport News from \"../../assets/nav/Documents-Outline.svg\";\r\nimport Music from \"../../assets/nav/Play-Outline.svg\";\r\nimport Settings from \"../../assets/nav/Setting-Outline.svg\";\r\n\r\nexport type NavItemsType = {\r\n    id: string\r\n    pathTo: string\r\n    icon: string\r\n    navName: string\r\n}\r\n\r\nlet navItems: Array<NavItemsType> = [\r\n    {id: uuid(), pathTo: '/profile', icon: Profile, navName: 'PROFILE'},\r\n    {id: uuid(), pathTo: '/messages', icon: Chat, navName: 'MESSAGES'},\r\n    {id: uuid(), pathTo: '/users', icon: Users, navName: 'USERS'},\r\n    {id: uuid(), pathTo: '/news', icon: News, navName: 'NEWS'},\r\n    {id: uuid(), pathTo: '/music', icon: Music, navName: 'MUSIC'},\r\n    {id: uuid(), pathTo: '/settings', icon: Settings, navName: 'SETTINGS'},\r\n]\r\n\r\nconst NavContainer = () =>  {\r\n\r\n        return (\r\n            <Nav navItems={navItems}/>\r\n        )\r\n    }\r\n\r\n\r\nexport default NavContainer;\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RootStateType} from \"../redux/redux-store\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\nconst RedirectComponent: React.FC = ({children}) => {\r\n\r\n\r\n    const isAuth = useSelector<RootStateType, boolean>(state => state.auth.isAuth)\r\n\r\n    if (!isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n    return <>{children}</>\r\n}\r\n\r\nexport default RedirectComponent;\r\n\r\n","import React, {useEffect} from 'react';\r\nimport './App.scss';\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport NavContainer from \"./components/Nav/NavContainer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {initializeAppTC} from \"./redux/reducers/actions/app-actions\";\r\nimport {RootStateType} from \"./redux/redux-store\";\r\nimport {Preloader} from \"./components/UI/Preloader/Preloader\";\r\nimport RedirectComponent from './hoc/withAuthRedirect';\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"))\r\n\r\n\r\n\r\nconst App: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const init = useSelector<RootStateType, boolean>(state => state.app.initialized)\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeAppTC())\r\n        window.addEventListener(\"unhandledrejection\", catchAllUnhandledErrors)\r\n        return () => {\r\n            window.removeEventListener(\"unhandledrejection\", catchAllUnhandledErrors)\r\n        }\r\n    })\r\n\r\n    const catchAllUnhandledErrors = (promise: any) => {\r\n        alert(\"some error occured\")\r\n        // console.error(promise)\r\n    }\r\n\r\n    if (!init) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <NavContainer/>\r\n            <div className='app-wrapper-content'>\r\n                <Switch>\r\n                    <Route path='/profile/:userId?' render={() =>\r\n                        <React.Suspense fallback={<Preloader/>}>\r\n                            <RedirectComponent><ProfileContainer/></RedirectComponent>\r\n                        </React.Suspense>\r\n                    }/>\r\n                    <Route path='/messages' render={() =>\r\n                        <React.Suspense fallback={<Preloader/>}>\r\n                            <RedirectComponent><DialogsContainer/></RedirectComponent>\r\n                        </React.Suspense>}/>\r\n                    <Route path='/users' component={UsersContainer}/>\r\n                    <Route path='/news' component={News}/>\r\n                    <Route path='/music' component={Music}/>\r\n                    <Route path='/settings' component={Settings}/>\r\n                    <Route path='/login' component={LoginPage}/>\r\n                    <Route path='/' render={() => <Redirect to={\"profile\"}/>}/>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './index.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/redux-store\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}