{"version":3,"sources":["hoc/withAuthRedirect.tsx","components/Dialogs/Messages/Messages.module.scss","components/Dialogs/Dialogs.module.scss","components/Dialogs/DIalogItems/DialogItems.module.scss","assets/Find-Outline.svg","components/Dialogs/DIalogItems/DialogItem/DialogItem.module.scss","components/Dialogs/Messages/Message/Message.module.scss","components/Dialogs/DIalogItems/DialogItem/DialogItem.tsx","components/Dialogs/DIalogItems/DialogItems.tsx","components/Dialogs/Messages/Message/Message.tsx","components/Dialogs/Messages/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Messages/Messages.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","name","id","key","className","classes","dialog","activeClassName","active","dialog__row","dialog__photo","dialog__body","dialog__body__name","dialog__body__last_message","DialogItems","dialogsElements","dialogs","map","dialogItems","dialogItems__header","dialogItems__header__search","src","SearchIcon","alt","placeholder","type","dialogItems__header__filter","dialogItems__body","Message","message","messageClass","messageRowClass","message__row","messageBodyClass","message__body","message__photo","photo","message__userName","message__time","time","maxLength30","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","messages__input","Field","component","Input","validate","requiredField","Messages","addMessageAC","messagesElements","messages","m","values","newMessageBody","Dialogs","Wrapper","compose","dialogsPage"],"mappings":"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","file":"static/js/3.bdcf281f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RootStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state: RootStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component: React.ComponentType) => {\r\n\r\n    class RedirectComponent extends React.Component<{isAuth: boolean}> {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__ufuSR\",\"messages__input\":\"Messages_messages__input__WGiDu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__-bpiG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItems\":\"DialogItems_dialogItems__3EnKg\",\"dialogItems__header\":\"DialogItems_dialogItems__header__NlNUV\",\"dialogItems__header__search\":\"DialogItems_dialogItems__header__search__WpaBN\",\"dialogItems__header__filter\":\"DialogItems_dialogItems__header__filter__2zqj7\"};","module.exports = __webpack_public_path__ + \"static/media/Find-Outline.a95de924.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__2iKBU\",\"dialog__row\":\"DialogItem_dialog__row__vQtzo\",\"dialog__photo\":\"DialogItem_dialog__photo__33KME\",\"dialog__body\":\"DialogItem_dialog__body__31wqi\",\"dialog__body__name\":\"DialogItem_dialog__body__name__2UKHg\",\"dialog__body__last_message\":\"DialogItem_dialog__body__last_message__10gPQ\",\"active\":\"DialogItem_active__34eRg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3nKX0\",\"message__row\":\"Message_message__row__2Ttry\",\"message__photo\":\"Message_message__photo__59r4c\",\"message__body\":\"Message_message__body__2bppU\",\"message__userName\":\"Message_message__userName__dYuY8\",\"message__time\":\"Message_message__time__gNGE0\",\"right\":\"Message_right__2p732\",\"right__row\":\"Message_right__row__2h2Y1\",\"right__body\":\"Message_right__body__1KsYJ\"};","import React from \"react\";\r\nimport classes from './DialogItem.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype DialogItemPropsType = {\r\n    name: string\r\n    id: string\r\n}\r\n\r\nconst DialogItem: React.FC<DialogItemPropsType> = ({name, id}) => {\r\n    return (\r\n        <NavLink to={`/messages/${id}`} key={id} className={classes.dialog}\r\n                 activeClassName={classes.active}>\r\n            <div className={classes.dialog__row}>\r\n                <div className={classes.dialog__photo}></div>\r\n                <div className={classes.dialog__body}>\r\n                    <div className={classes.dialog__body__name}>{name}</div>\r\n                    <div className={classes.dialog__body__last_message}>\r\n                        {\"last message\"}\r\n                        <span>{\"last mes time\"}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport classes from './DialogItems.module.scss'\r\nimport SearchIcon from '../../../assets/Find-Outline.svg'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport { DialogType } from \"../../../types/types\";\r\n\r\ntype DialogItemPropsType = {\r\n    dialogs: Array<DialogType>\r\n}\r\n\r\nexport const DialogItems: React.FC<DialogItemPropsType> = ({dialogs}) => {\r\n\r\n    let dialogsElements = dialogs.map(dialog => <DialogItem\r\n        name={dialog.name}\r\n        key={dialog.id}\r\n        id={dialog.id}/>)\r\n\r\n    return (\r\n        <div className={classes.dialogItems}>\r\n            <div className={classes.dialogItems__header}>\r\n                <h3>Conversation</h3>\r\n                <div className={classes.dialogItems__header__search}>\r\n                    <div><img src={SearchIcon} alt=\"\"/></div>\r\n                    <div><input placeholder={\"Search here\"} type=\"text\"/></div>\r\n                </div>\r\n                <div className={classes.dialogItems__header__filter}>filter</div>\r\n            </div>\r\n            <div className={classes.dialogItems__body}>{dialogsElements}</div>\r\n        </div>);\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from './Message.module.scss'\r\nimport {MessageType} from \"../../../../types/types\";\r\n\r\n\r\ntype MessagePropsType = {\r\n    message: MessageType\r\n}\r\n\r\nconst Message: React.FC<MessagePropsType> = ({message}) => {\r\n\r\n    let messageClass = `${classes.message}`\r\n    let messageRowClass = `${classes.message__row}`\r\n    let messageBodyClass = `${classes.message__body}`\r\n\r\n    // if (props.message.id % 2) {\r\n    //     messageClass = `${classes.message} ${classes.right}`\r\n    //     messageRowClass = `${classes.message__row} ${classes.right__row}`\r\n    //     messageBodyClass = `${classes.message__body} ${classes.right__body}`\r\n    // }\r\n\r\n    return (\r\n        <div className={messageClass} key={message.id}>\r\n            <div className={messageRowClass}>\r\n                <div className={classes.message__photo}>\r\n                    <img src={message.photo} alt=\"\"/>\r\n                </div>\r\n                <div >\r\n                    <div className={messageBodyClass}>\r\n                        <div className={classes.message__userName}>{message.name}</div>\r\n                        <div>{message.message}</div>\r\n                    </div>\r\n                    <div className={classes.message__time}>time {message.time}</div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport classes from \"../Messages.module.scss\";\r\nimport {Input} from \"../../../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../../../utils/validators/validators\";\r\n\r\nexport type AddMessageFormType = {\r\n    newMessageBody: string\r\n}\r\n\r\nconst maxLength30 = maxLengthCreator(30)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<AddMessageFormType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={classes.messages__input}>\r\n                <Field component={Input}\r\n                       validate={[requiredField, maxLength30]}\r\n                       name={\"newMessageBody\"}\r\n                       placeholder={\"type a message...\"}\r\n                />\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm<AddMessageFormType>({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default AddMessageFormRedux;\r\n","import Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport classes from \"./Messages.module.scss\";\r\nimport AddMessageFormRedux, { AddMessageFormType } from \"./AddMessageForm/AddMessageForm\";\r\nimport {AddMessagePayloadType} from \"../../../redux/reducers/actions/dialogs-actions\";\r\nimport { MessageType } from \"../../../types/types\";\r\n\r\ntype MessagesPropsType = {\r\n    messages: Array<MessageType>\r\n    addMessageAC: (payload: AddMessagePayloadType) => void\r\n}\r\n\r\nexport const Messages: React.FC<MessagesPropsType> = ({addMessageAC, messages}) => {\r\n\r\n    let messagesElements = messages.map(m => <Message message={m} key={m.id}/>)\r\n\r\n    // function onPressEnter(e: KeyboardEvent<HTMLInputElement>) {\r\n    //     if (e.key === \"Enter\") {\r\n    //     }\r\n    // }\r\n\r\n    const addNewMessage = (values: AddMessageFormType) => {\r\n        addMessageAC({message: values.newMessageBody})\r\n    }\r\n\r\n    return <div className={classes.messages}>\r\n        {messagesElements}\r\n        <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n    </div>;\r\n}\r\n\r\n","import React from \"react\";\r\nimport classes from './Dialogs.module.scss'\r\nimport Wrapper from \"../Wrapper/Wrapper\";\r\nimport {DialogItems} from \"./DIalogItems/DialogItems\";\r\nimport {Messages} from \"./Messages/Messages\";\r\nimport {DialogsPageStateType} from \"../../redux/reducers/dialogs-reducer\";\r\nimport {AddMessagePayloadType} from \"../../redux/reducers/actions/dialogs-actions\";\r\n\r\ntype PropsType = {\r\n    state: DialogsPageStateType\r\n    addMessageAC: (payload: AddMessagePayloadType) => void\r\n}\r\n\r\n\r\nconst Dialogs: React.FC<PropsType> = ({state, addMessageAC}) => {\r\n\r\n    return (\r\n        <Wrapper>\r\n            <div className={classes.dialogs}>\r\n                <DialogItems dialogs={state.dialogs}/>\r\n                <Messages messages={state.messages}\r\n                          addMessageAC={addMessageAC}\r\n                />\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {addMessageAC} from \"../../redux/reducers/actions/dialogs-actions\";\r\n\r\n\r\nlet mapStateToProps = (state: RootStateType) => {\r\n    return {\r\n        state: state.dialogsPage,\r\n    }\r\n}\r\n\r\nexport default compose<any>(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {addMessageAC}),\r\n)(Dialogs)\r\n;\r\n"],"sourceRoot":""}