{"version":3,"sources":["redux/reducers/actions/dialogs-actions.ts","assets/userDefaultPhoto.png","api/api.ts","components/Wrapper/Wrapper.module.scss","components/UI/Preloader/Preloader.module.scss","assets/nav/Profile-Outline.svg","assets/nav/Chat-Outline.svg","assets/nav/Profile-GroupFriend-Outline.svg","assets/nav/Documents-Outline.svg","assets/nav/Play-Outline.svg","assets/nav/Setting-Outline.svg","components/common/Pagination/Pagination.module.scss","components/Login/Login.module.scss","serviceWorker.ts","redux/reducers/actions/users-actions.ts","redux/reducers/profile-page-reducer.ts","redux/reducers/dialogs-reducer.ts","redux/reducers/actions/auth-actions.ts","utils/objects-helpers.ts","redux/reducers/users-reducer.ts","redux/reducers/actions/app-actions.ts","redux/reducers/auth-reducer.tsx","redux/reducers/app-reducer.ts","redux/redux-store.ts","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/common/Pagination/Pagination.tsx","components/Users/User/User.tsx","components/Users/Users.tsx","redux/reducers/selectors/users-selector.ts","components/Users/UsersContainer.tsx","components/Login/LoginForm/LoginForm.tsx","components/Login/Login.tsx","components/Nav/Nav.tsx","components/Nav/NavContainer.tsx","App.tsx","index.tsx","components/Users/User/User.module.scss","components/Nav/Nav.module.scss","components/UI/Preloader/Preloader.tsx","redux/reducers/actions/profile-actions.ts","components/Settings/Settings.module.scss","components/Wrapper/Wrapper.tsx","components/common/FormControls/FormControls.tsx","components/Users/Users.module.scss","components/common/FormControls/FormControls.module.scss","utils/validators/validators.ts"],"names":["ACTIONS_TYPE","type","addMessageAC","ADD_MESSAGE","payload","module","exports","ResultCodes","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","res","data","unfollow","userId","delete","follow","post","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","getAuthUserData","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","initialState","posts","id","uuid","message","likeCounter","profile","dialogs","name","messages","makeAction","setFollowAC","FOLLOW","setUnfollowAC","UNFOLLOW","setUsersAC","SET_USERS","setCurrentPageAC","SET_CURRENT_PAGE","setTotalCountOfUsersAC","SET_TOTAL_COUNT","toggleIsFetchingAC","TOGGLE_IS_FETCHING","toggleFollowingProgressAC","TOGGLE_IS_FOLLOWING_PROGRESS","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","isFetching","resultCode","updateObjectInArray","items","itemId","objPropName","newObjProps","map","item","users","totalUsersCount","followingInProgress","setAuthUserDataAC","SET_AUTH_USER_DATA","getAuthUserDataTC","Success","isAuth","setInitializedSuccessAC","SET_INITIALIZED_SUCCESS","initialized","rootReducer","combineReducers","profilePage","state","action","ADD_POST","ADD_LIKE","postId","DELETE_POST","filter","SET_USER_PROFILE","SET_USER_STATUS","dialogsPage","usersPage","followed","auth","form","formReducer","app","store","configureStore","reducer","middleware","getDefaultMiddleware","prepend","thunkMiddleware","News","Music","Settings","Wrapper","className","classes","settings","block","block__row","block__element","block__content","Pagination","itemsOnPage","totalItems","changePageNumber","pagesCount","Math","ceil","firstPage","lastPage","pages","i","push","pagination","pagination__btn","disabled","onClick","pagination__pages","pagination__btn_active","pagination__space","pageN","User","userData","followTC","unfollowTC","userCard","key","userCard__authorPhoto","to","src","photos","small","userDefaultPhoto","alt","followBtn","some","userCard__body","userCard__body_header","userCard__body_text","Users","onPageNumberChanged","pageButton","Preloader","user","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","props","getUsersTC","this","React","Component","connect","bind","totalCount","reduxForm","onSubmit","handleSubmit","loginForm","loginForm__field","Field","placeholder","component","Input","validate","requiredField","error","formSummaryError","loginForm__button","loginForm__rememberMe","loginTC","length","stopSubmit","_error","loginContainer","loginWrapper","formData","Nav","logoutTC","navItems","nav","loginBlock","nav__items","navItem","pathTo","activeClassName","active","item__icon","icon","item__name","navName","NavContainer","Profile","Chat","DialogsContainer","lazy","ProfileContainer","App","initializeAppTC","path","render","Suspense","fallback","LoginPage","compose","withRouter","promise","Promise","all","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","ldsFacebook","addPostAC","addLikeAC","deletePostAC","setUserProfileAC","setUserStatusAC","getUserProfileTC","getStatusTC","updateStatusTC","wrapper","children","Element","input","meta","hasError","touched","formControl","errorText","TextArea","value","maxLengthCreator","maxLength"],"mappings":"wGAMO,IAAKA,EANZ,oE,SAMYA,K,mCAAAA,M,KAIZ,IAA+CC,EAclCC,GAdkCD,EAcyCD,EAAaG,YAd1C,SAACC,GAAD,MAAiB,CAACH,OAAMG,c,oBCVnFC,EAAOC,QAAU,IAA0B,8C,gCCA3C,4IAuDYC,EAvDZ,SAGIC,EAHJ,OAGeC,EAAMC,OAAO,CACxBC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAINC,EAAW,CACpBC,SADoB,WACsC,IAAjDC,EAAgD,uDAA1B,EAAGC,EAAuB,uDAAJ,GACjD,OAAOT,EAASU,IAAT,qBAAiDF,EAAjD,kBAAsEC,IACxEE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAEzBC,SALoB,SAKXC,GACL,OAAOf,EAASgB,OAAT,iBAAwCD,KAEnDE,OARoB,SAQbF,GACH,OAAOf,EAASkB,KAAT,iBAAsCH,MAKxCI,EAAa,CACtBC,WADsB,SACXL,GACP,OAAOf,EAASU,IAAT,kBAAqCK,IACvCJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAEzBQ,UALsB,SAKZN,GACN,OAAOf,EAASU,IAAT,yBAAuCK,IACzCJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAEzBS,aATsB,SASTC,GACT,OAAOvB,EAASwB,IAAT,iBAA6C,CAACD,WAChDZ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAIhBY,EAAU,CACnBC,gBADmB,WAEf,OAAO1B,EAASU,IAAT,YACFC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAEzBc,MALmB,SAKbC,EAAeC,GAAgD,IAA9BC,EAA6B,wDAChE,OAAO9B,EAASkB,KAAT,aAA8D,CAACU,QAAOC,WAAUC,eAClFnB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAEzBkB,OATmB,WAUf,OAAO/B,EAASgB,OAAT,cACFL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,W,SAIjBd,O,qBAAAA,I,iBAAAA,I,2CAAAA,M,0BCtDZF,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,YAAc,iC,oBCDhCD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,yD,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,+ECC3CD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,kBAAoB,sCAAsC,gBAAkB,oCAAoC,uBAAyB,2CAA2C,kBAAoB,wC,mBCAtQD,EAAOC,QAAU,CAAC,eAAiB,8BAA8B,aAAe,4BAA4B,UAAY,yBAAyB,kBAAoB,iCAAiC,iBAAmB,gCAAgC,sBAAwB,qCAAqC,iBAAmB,kC,yFCWrTkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,ICJM5C,E,sCCNR6C,EAAe,CACfC,MAAO,CACH,CAACC,GAAIC,iBAAQC,QAAS,qBAAsBC,YAAa,KACzD,CAACH,GAAIC,iBAAQC,QAAS,6DAA8DC,YAAa,MAErGC,QAAS,KACTpB,OAAQ,I,SCRRc,EAAe,CACfO,QAAS,CACL,CAACL,GAAIC,iBAAQK,KAAM,QACnB,CAACN,GAAIC,iBAAQK,KAAM,SACnB,CAACN,GAAIC,iBAAQK,KAAM,UACnB,CAACN,GAAIC,iBAAQK,KAAM,WAEvBC,SAAU,CACN,CAACP,GAAIC,iBAAQC,QAAS,MACtB,CAACF,GAAIC,iBAAQC,QAAS,iBACtB,CACIF,GAAIC,iBACJC,QAAS,8KAEb,CAACF,GAAIC,iBAAQC,QAAS,Q,2CFNlBjD,K,sBAAAA,E,0BAAAA,E,4BAAAA,E,0CAAAA,E,wCAAAA,E,8CAAAA,E,mEAAAA,M,KAUZ,IGTYA,EHSNuD,EAAa,SAA4BtD,GAA5B,OAAwC,SAACG,GAAD,MAAiB,CAACH,OAAMG,aActEoD,EAAcD,EAAsDvD,EAAayD,QAEjFC,EAAgBH,EAAwDvD,EAAa2D,UAKrFC,EAAaL,EAAwDvD,EAAa6D,WAKlFC,EAAmBP,EAAqEvD,EAAa+D,kBAKrGC,EAAyBT,EAA0EvD,EAAaiE,iBAKhHC,EAAqBX,EAAyEvD,EAAamE,oBAM3GC,EAA4Bb,EAA0FvD,EAAaqE,8BAsB1IC,EAAkB,uCAAG,WAAOC,EAAoBhD,EAAgBiD,EAAgBC,GAA3D,SAAAC,EAAA,6DACvBH,EAASH,EAA0B,CAACO,YAAY,EAAMpD,YAD/B,SAGFiD,EAAUjD,GAHR,OAIU,IAJV,OAIVF,KAAKuD,YACdL,EAASE,EAAc,CAAClD,YAE5BgD,EAASH,EAA0B,CAACO,YAAY,EAAOpD,YAPhC,2CAAH,4DIvFXsD,EAAsB,SAACC,EAAmBC,EAAgBC,EAAkBC,GAErF,OAAOH,EAAMI,KAAI,SAAAC,GAAI,OAAIA,EAAKH,KAAiBD,EAAtB,2BACfI,GAASF,GACbE,MCENtC,EAAe,CACfuC,MAAO,GACPnE,SAAU,GACVoE,gBAAiB,EACjBrE,YAAa,EACb2D,YAAY,EACZW,oBAAqB,I,kBFEbtF,K,8CAAAA,M,KAIZ,IAA+CC,EGNnCD,EHiBCuF,GAXkCtF,EAW6CD,EAAawF,mBAX9C,SAACpF,GAAD,MAAiB,CAACH,OAAMG,aAmBtEqF,EAAoB,yDAAiB,WAAOlB,GAAP,uBAAAG,EAAA,sEAC7BzC,IAAQC,kBADqB,OAC1Cb,EAD0C,SAErBA,EAAKA,KAAzBe,EAFyC,EAEzCA,MAAOW,EAFkC,EAElCA,GAAIZ,EAF8B,EAE9BA,MACZd,EAAKuD,aAAerE,IAAYmF,SAChCnB,EAASgB,EAAkB,CAACnD,QAAOW,KAAIZ,QAAOwD,QAAQ,KAJZ,2CAAjB,uDIpC7B9C,EAAe,CACfE,GAAI,KACJZ,MAAO,KACPC,MAAO,KACPuD,QAAQ,G,2BDOA3F,K,uDAAAA,M,KAIZ,IAYa4F,EAA0B,iBAAO,CAAC3F,KAAMD,EAAa6F,0BE3B9DhD,EAAe,CACfiD,aAAa,G,SCObC,EAAcC,YAAgB,CAC9BC,YRQ0B,WAGF,IAFxBC,EAEuB,uDAFfrD,EACRsD,EACuB,uCAEvB,OAAQA,EAAOlG,MACX,KAAKD,IAAaoG,SACd,OAAO,2BACAF,GADP,IAEIpD,MAAM,GAAD,mBACEoD,EAAMpD,OADR,0BAEAC,GAAIC,kBAAWmD,EAAO/F,SAFtB,IAE+B8C,YAAa,QAGzD,KAAKlD,IAAaqG,SACd,OAAO,2BACAH,GADP,IAEIpD,MAAOoD,EAAMpD,MAAMoC,KACf,SAAAxD,GAAI,OAAIA,EAAKqB,KAAOoD,EAAO/F,QAAQkG,OAA3B,2BACE5E,GADF,IACQwB,YAAaxB,EAAKwB,YAAc,IAC1CxB,OAGlB,KAAK1B,IAAauG,YACd,OAAO,2BACAL,GADP,IAEIpD,MAAOoD,EAAMpD,MAAM0D,QAAO,SAAA9E,GAAI,OAAIA,EAAKqB,KAAOoD,EAAO/F,QAAQkG,YAErE,KAAKtG,IAAayG,iBAMlB,KAAKzG,IAAa0G,gBACd,OAAO,2BACAR,GACAC,EAAO/F,SAGlB,QACI,OAAO8F,IQhDfS,YPY0B,WAA6E,IAA5ET,EAA2E,uDAAnErD,EAAcsD,EAAqD,uCAEtG,OAAQA,EAAOlG,MACX,KAAKD,IAAaG,YACd,OAAO,2BACA+F,GADP,IAEI5C,SAAS,GAAD,mBACD4C,EAAM5C,UADL,cAEHP,GAAIC,kBAAWmD,EAAO/F,aAInC,QACI,OAAO8F,IOxBfU,UJGwB,WAAqE,IAApEV,EAAmE,uDAA3DrD,EAAcsD,EAA6C,uCAC5F,OAAQA,EAAOlG,MACX,KAAKD,EAAayD,OACd,OAAO,2BACAyC,GADP,IAEId,MAAOP,EAAoBqB,EAAMd,MAAOe,EAAO/F,QAAQmB,OAAQ,KAAM,CAACsF,UAAU,MAGxF,KAAK7G,EAAa2D,SACd,OAAO,2BACAuC,GADP,IAEId,MAAOP,EAAoBqB,EAAMd,MAAOe,EAAO/F,QAAQmB,OAAQ,KAAM,CAACsF,UAAU,MAGxF,KAAK7G,EAAa6D,UACd,OAAO,2BAAIqC,GAAX,IAAkBd,MAAM,YAAKe,EAAO/F,QAAQgF,SAGhD,KAAKpF,EAAa+D,iBAGlB,KAAK/D,EAAaiE,gBAGlB,KAAKjE,EAAamE,mBACd,OAAO,2BAAI+B,GAAUC,EAAO/F,SAEhC,KAAKJ,EAAaqE,6BACd,OAAO,2BACA6B,GADP,IACcZ,oBAAqBa,EAAO/F,QAAQuE,WAAf,sBACrBuB,EAAMZ,qBADe,CACMa,EAAO/F,QAAQmB,SAC9C2E,EAAMZ,oBAAoBkB,QAAO,SAAAzD,GAAE,OAAIA,IAAOoD,EAAO/F,QAAQmB,YAG3E,QACI,OAAO2E,IIrCfY,KFJuB,WAAoE,IAAnEZ,EAAkE,uDAA1DrD,EAAcsD,EAA4C,uCAE1F,OAAQA,EAAOlG,MACX,KAAKD,EAAawF,mBACd,OAAO,2BACAU,GACAC,EAAO/F,SAGlB,QACI,OAAO8F,IELfa,KAAMC,IACNC,IDRsB,WAAkE,IAAjEf,EAAgE,uDAAxDrD,EAAcsD,EAA0C,uCAEvF,OAAQA,EAAOlG,MACX,KAAKD,EAAa6F,wBACd,OAAO,2BACAK,GADP,IAEIJ,aAAa,IAGrB,QACI,OAAOI,MCGfgB,EAAQC,YAAe,CACvBC,QAASrB,EACTsB,WAAY,SAAAC,GAAoB,OAAIA,IAAuBC,QAAQC,QAGxDN,IAIfzE,OAAOyE,MAAQA,E,6ECnBAO,MARf,WACI,OACI,sCCMOC,MARf,WACI,OACI,uC,6BCgBOC,OAjBf,WACI,OACI,kBAACC,GAAA,EAAD,KACI,yBAAKC,UAAWC,KAAQC,UAAxB,WAEI,yBAAKF,UAAWC,KAAQE,OACpB,yBAAKH,UAAWC,KAAQG,YACpB,yBAAKJ,UAAWC,KAAQI,iBACxB,yBAAKL,UAAWC,KAAQK,sB,0DCkDjCC,GApDyB,SAAC,GAA8D,IAA7DpH,EAA4D,EAA5DA,YAAaqH,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,iBAExEC,EAAaC,KAAKC,KAAKJ,EAAaD,GACpCM,EAAY3H,EAAc,EAC1B4H,EAAW5H,EAAc,EACzB6H,EAAQ,GAERF,GAAa,IAAGA,EAAY,GAC5BC,GAAYJ,IAAYI,EAAWJ,GAEvC,IAAK,IAAIM,EAAIH,EAAWG,GAAKF,EAAUE,IACnCD,EAAME,KAAKD,GAWf,OACI,yBAAKjB,UAAWC,KAAQkB,YACpB,4BAAQnB,UAAWC,KAAQmB,gBACnBC,SAAwB,IAAdlI,EACVmI,QAZQ,WAChBnI,EAAY,GAAIuH,EAAiBvH,EAAc,KAS/C,QAIA,yBAAK6G,UAAWC,KAAQsB,mBACnBpI,EAAc,GAAK,oCACpB,4BAAQ6G,UAAS,UAAKC,KAAQmB,gBAAb,YAAgC,IAAMjI,EAAc8G,KAAQuB,uBAAyB,IACjGF,QAAS,kBAAMZ,EAAiB,KAAK,GACtC,yBAAKV,UAAWC,KAAQwB,mBAAxB,QAGHT,EAAM3D,KAAI,SAAAqE,GAAK,OAAI,4BAChB1B,UAAS,UAAKC,KAAQmB,gBAAb,YAAgCM,IAAUvI,EAAc8G,KAAQuB,uBAAyB,IAClGF,QAAS,kBAAMZ,EAAiBgB,KAASA,MAC5CvI,EAAcwH,EAAa,GAAK,oCAC7B,yBAAKX,UAAWC,KAAQwB,mBAAxB,OACA,4BAAQzB,UAAS,UAAKC,KAAQmB,gBAAb,YAAgCT,IAAexH,EAAc8G,KAAQuB,uBAAyB,IAC/GF,QAAS,kBAAMZ,EAAiBC,KAAcA,KAItD,4BAAQX,UAAWC,KAAQmB,gBACnBC,SAAUlI,IAAcwH,EACxBW,QA7BQ,WAChBnI,EAAYwH,GAAaD,EAAiBvH,EAAc,KA0BxD,U,yCCbGwI,GA7BmB,SAAC,GAA2D,IAA1DC,EAAyD,EAAzDA,SAAUnE,EAA+C,EAA/CA,oBAAqBoE,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,WACzE,OACI,yBAAK9B,UAAWC,KAAQ8B,SAAUC,IAAKJ,EAAS1G,IAC5C,yBAAK8E,UAAWC,KAAQgC,uBACpB,kBAAC,IAAD,CAASC,GAAI,YAAcN,EAAS1G,IAChC,yBAAKiH,IAA+B,OAA1BP,EAASQ,OAAOC,MAAiBT,EAASQ,OAAOC,MAAQC,KAC9DC,IAAI,MAEb,6BACKX,EAAS5C,SACJ,4BAAQgB,UAAWC,KAAQuC,UACnBnB,SAAU5D,EAAoBgF,MAAK,SAAAvH,GAAE,OAAIA,IAAO0G,EAAS1G,MACzDoG,QAAS,kBAAMQ,EAAWF,EAAS1G,MAAM,YACjD,4BAAQ8E,UAAWC,KAAQuC,UACnBnB,SAAU5D,EAAoBgF,MAAK,SAAAvH,GAAE,OAAIA,IAAO0G,EAAS1G,MACzDoG,QAAS,WAAOO,EAASD,EAAS1G,MAAO,YAG/D,yBAAK8E,UAAWC,KAAQyC,gBAEpB,6BAAMd,EAAS1G,IACf,yBAAK8E,UAAWC,KAAQ0C,uBAAwBf,EAASpG,MACzD,yBAAKwE,UAAWC,KAAQ2C,qBAAsBhB,EAAS1H,WC4BxD2I,OA3Cf,YAQwC,IARxBf,EAQuB,EARvBA,WACGD,EAOoB,EAPpBA,SACApE,EAMoB,EANpBA,oBACAqF,EAKoB,EALpBA,oBACA1J,EAIoB,EAJpBA,SACAoE,EAGoB,EAHpBA,gBACArE,EAEoB,EAFpBA,YACA2D,EACoB,EADpBA,WACAS,EAAoB,EAApBA,MACf,OACI,kBAACwC,GAAA,EAAD,KACI,yBAAKC,UAAWC,KAAQlB,WACpB,yBAAKiB,UAAWC,KAAQ8C,YACpB,kBAAC,GAAD,CAAY5J,YAAaA,EACbqH,YAAapH,EACbqH,WAAYjD,EACZkD,iBAAkBoC,KAGjChG,EACK,kBAACkG,GAAA,EAAD,MACA,6BACGzF,EAAMF,KAAI,SAAA4F,GAAI,OACX,kBAAC,GAAD,CAAMrB,SAAUqB,EACVjB,IAAKiB,EAAK/H,GACV2G,SAAUA,EACVC,WAAYA,EACZrE,oBAAqBA,OAG/B,yBAAKuC,UAAWC,KAAQ8C,YACpB,kBAAC,GAAD,CAAY5J,YAAaA,EACbqH,YAAapH,EACbqH,WAAYjD,EACZkD,iBAAkBoC,SCnD7C5J,GAAY,SAACmF,GACtB,OAAOA,EAAMU,UAAUxB,OAWd2F,GAAe,SAAC7E,GACzB,OAAOA,EAAMU,UAAU3F,UAGd+J,GAAsB,SAAC9E,GAChC,OAAOA,EAAMU,UAAUvB,iBAGd4F,GAAkB,SAAC/E,GAC5B,OAAOA,EAAMU,UAAU5F,aAGdkK,GAAiB,SAAChF,GAC3B,OAAOA,EAAMU,UAAUjC,YAGdwG,GAA0B,SAACjF,GACpC,OAAOA,EAAMU,UAAUtB,qBCZrB8F,G,4MAMFT,oBAAsB,SAACU,GAAwB,IACpCpK,EAAY,EAAKqK,MAAjBrK,SACP,EAAKqK,MAAMC,WAAWF,EAAYpK,I,kEAPjB,IAAD,EACgBuK,KAAKF,MAA9BrK,EADS,EACTA,SAAUD,EADD,EACCA,YACjBwK,KAAKF,MAAMC,WAAWvK,EAAaC,K,+BASnC,OAAO,kBAAC,GAAD,iBAAWuK,KAAKF,MAAhB,CAAuBX,oBAAqBa,KAAKb,2B,GAZnCc,IAAMC,WAoCpBC,iBAXO,SAACzF,GACnB,MAAO,CACHd,MAAOrE,GAASmF,GAChBjF,SAAU8J,GAAY7E,GACtBb,gBAAiB2F,GAAmB9E,GACpClF,YAAaiK,GAAe/E,GAC5BvB,WAAYuG,GAAchF,GAC1BZ,oBAAqB6F,GAAuBjF,MAKhD,CACIwD,SjBwCgB,SAACnI,GAAD,OAA+B,SAACgD,GACpDD,EAAmBC,EAAUhD,EAAQT,IAASW,OAAOmK,KAAK9K,KAAW0C,KiBzCvDmG,WjB4CQ,SAACpI,GAAD,OAA+B,SAACgD,GACtDD,EAAmBC,EAAUhD,EAAQT,IAASQ,SAASsK,KAAK9K,KAAW4C,KiB7C7C6H,WjBgBJ,SAACvK,EAAqBC,GAAtB,8CAAsD,WAAOsD,GAAP,eAAAG,EAAA,6DAE5EH,EAASL,EAAmB,CAACS,YAAY,KACzCJ,EAAST,EAAiB,CAAC9C,iBAHiD,SAK3DF,IAASC,SAASC,EAAaC,GAL4B,OAKxEI,EALwE,OAO5EkD,EAASL,EAAmB,CAACS,YAAY,KACzCJ,EAASX,EAAW,CAACwB,MAAO/D,EAAKyD,SACjCP,EAASP,EAAuB,CAACqB,gBAAiBhE,EAAKwK,cATqB,2CAAtD,wDiBlBXF,CAGRP,I,0DCvBQU,gBAAwB,CAAC/E,KAAM,SAA/B+E,EAxB8C,SAACR,GAC1D,OACI,0BAAMS,SAAUT,EAAMU,aAAcnE,UAAWC,KAAQmE,WACnD,yBAAKpE,UAAWC,KAAQoE,kBACpB,kBAACC,GAAA,EAAD,CAAOC,YAAa,qBAAsBC,UAAWC,KAAOjJ,KAAM,QAASkJ,SAAU,CAACC,SAE1F,yBAAK3E,UAAWC,KAAQoE,kBACpB,kBAACC,GAAA,EAAD,CAAOC,YAAa,qBAAsBnM,KAAM,WAAYoM,UAAWC,KAAOjJ,KAAM,WAAYkJ,SAAU,CAACC,SAE9GlB,EAAMmB,OAAS,yBAAK5E,UAAWC,KAAQ4E,kBACnCpB,EAAMmB,OAGX,6BACI,4BAAQ5E,UAAWC,KAAQ6E,mBAA3B,UAEJ,yBAAK9E,UAAWC,KAAQ8E,uBACpB,kBAACT,GAAA,EAAD,CAAOlM,KAAM,WAAYoM,UAAWC,KAAOjJ,KAAM,eACjD,kDCQDsI,iBAJS,SAACzF,GAAD,MAAyB,CAC7CP,OAAQO,EAAMY,KAAKnB,UAGiB,CAACkH,QhBOlB,SAACzK,EAAeC,GAAhB,IAAkCC,EAAlC,sGACnB,WAAOiC,GAAP,iBAAAG,EAAA,sEACqBzC,IAAQE,MAAMC,EAAOC,EAAUC,GADpD,QACQjB,EADR,QAEauD,aAAerE,IAAYmF,QAChCnB,EAASkB,MAELxC,EAAU5B,EAAKiC,SAASwJ,OAAS,EAAIzL,EAAKiC,SAAS,GAAK,aAC5DiB,EAASwI,YAAW,QAAS,CAACC,OAAQ/J,MAN9C,2CADmB,wDgBPR0I,EAxBoB,SAAC,GAAuB,IAAtBkB,EAAqB,EAArBA,QAMjC,OANsD,EAAZlH,OAO/B,kBAAC,IAAD,CAAUoE,GAAI,aAIrB,yBAAKlC,UAAWC,KAAQmF,gBACpB,yBAAKpF,UAAWC,KAAQoF,cACpB,qCACA,kBAAC,GAAD,CAAWnB,SAZN,SAACoB,GACdN,EAAQM,EAAS/K,MAAO+K,EAAS9K,SAAU8K,EAAS7K,oB,oBCyB7C8K,GA9BkB,SAAC,GAAyC,IAAxCzH,EAAuC,EAAvCA,OAAQxD,EAA+B,EAA/BA,MAAOkL,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAExD,OACI,yBAAKzF,UAAWC,KAAQyF,KACpB,yBAAK1F,UAAWC,KAAQ0F,YACnB7H,EACK,6BAAMxD,EAAN,MAAe,4BAAQgH,QAASkE,GAAjB,WACf,kBAAC,IAAD,CAAStD,GAAI,UAAb,UAGV,yBAAKlC,UAAWC,KAAQ2F,YACnBH,EAASpI,KAAI,SAAAwI,GAAO,OACjB,kBAAC,IAAD,CACI3D,GAAI2D,EAAQC,OACZ9D,IAAK6D,EAAQ3K,GACb8E,UAAWC,KAAQ3C,KACnByI,gBAAiB9F,KAAQ+F,QACzB,yBAAKhG,UAAWC,KAAQgG,YACpB,yBAAK9D,IAAK0D,EAAQK,KAAM3D,IAAI,MAEhC,yBAAKvC,UAAWC,KAAQkG,YACnBN,EAAQO,gB,8HCF/BC,G,uKAKE,IAAIZ,EAAgC,CAChC,CAACvK,GAAIC,iBAAQ2K,OAAQ,WAAYI,KAAMI,KAASF,QAAS,WACzD,CAAClL,GAAIC,iBAAQ2K,OAAQ,YAAaI,KAAMK,KAAMH,QAAS,YACvD,CAAClL,GAAIC,iBAAQ2K,OAAQ,SAAUI,KAAMrD,KAAOuD,QAAS,SACrD,CAAClL,GAAIC,iBAAQ2K,OAAQ,QAASI,KAAMtG,KAAMwG,QAAS,QACnD,CAAClL,GAAIC,iBAAQ2K,OAAQ,SAAUI,KAAMrG,KAAOuG,QAAS,SACrD,CAAClL,GAAIC,iBAAQ2K,OAAQ,YAAaI,KAAMpG,KAAUsG,QAAS,aAE/D,OACI,kBAAC,GAAD,iBAASzC,KAAKF,MAAd,CAAqBgC,SAAUA,S,GAdhB7B,IAAMC,WAwBlBC,iBALS,SAACzF,GAAD,MAA8C,CAClEP,OAAQO,EAAMY,KAAKnB,OACnBxD,MAAO+D,EAAMY,KAAK3E,SAGkB,CAACkL,SlBAjB,yDAAiB,WAAO9I,GAAP,SAAAG,EAAA,sEACpBzC,IAAQM,SADY,cAE5BqC,aAAerE,IAAYmF,SAChCnB,EAASgB,EAAkB,CAACI,QAAQ,EAAOxD,MAAO,KAAMC,MAAO,KAAMW,GAAI,QAHxC,2CAAjB,wDkBAT4I,CAAqCuC,ICtC9CG,GAAmB5C,IAAM6C,MAAK,kBAAM,iCACpCC,GAAmB9C,IAAM6C,MAAK,kBAAM,iCAYpCE,G,kLAGEhD,KAAKF,MAAMmD,oB,+BAIX,OAAKjD,KAAKF,MAAMxF,YAKZ,yBAAK+B,UAAU,eACX,kBAAC,GAAD,MACA,yBAAKA,UAAU,uBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO6G,KAAK,oBAAoBC,OAAQ,kBACpC,kBAAC,IAAMC,SAAP,CAAgBC,SAAU,kBAAChE,GAAA,EAAD,OACtB,kBAAC0D,GAAD,UAGR,kBAAC,IAAD,CAAOG,KAAK,YAAYC,OAAQ,kBAC5B,kBAAC,IAAMC,SAAP,CAAgBC,SAAU,kBAAChE,GAAA,EAAD,OACtB,kBAACwD,GAAD,UAER,kBAAC,IAAD,CAAOK,KAAK,SAASrC,UAAWjB,KAChC,kBAAC,IAAD,CAAOsD,KAAK,QAAQrC,UAAW5E,IAC/B,kBAAC,IAAD,CAAOiH,KAAK,SAASrC,UAAW3E,IAChC,kBAAC,IAAD,CAAOgH,KAAK,YAAYrC,UAAW1E,KACnC,kBAAC,IAAD,CAAO+G,KAAK,SAASrC,UAAWyC,KAChC,kBAAC,IAAD,CAAOJ,KAAK,IAAIC,OAAQ,kBACpB,kBAAC,IAAMC,SAAP,CAAgBC,SAAU,kBAAChE,GAAA,EAAD,OACtB,kBAAC0D,GAAD,aAxBb,kBAAC1D,GAAA,EAAD,U,GARDY,IAAMC,WA8CTqD,eACXC,IACArD,cANoB,SAACzF,GAAD,MAAgD,CACpEJ,YAAaI,EAAMe,IAAInB,eAKE,CAAC2I,gBhB3CC,kBAAiB,SAAClK,GAE7C,IAAI0K,EAAmB1K,EAASkB,KAChCyJ,QAAQC,IAAI,CAACF,IACR9N,MAAK,WACFoD,EAASqB,YgBoCNmJ,CAGbP,ICrEFY,IAAST,OACL,kBAAC,IAAMU,WAAP,KACI,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAUnI,MAAOA,GACb,kBAAC,GAAD,SAIZoI,SAASC,eAAe,SxByHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvO,MAAK,SAAAwO,GACJA,EAAaC,gBAEdC,OAAM,SAAApD,GACLqD,QAAQrD,MAAMA,EAAMxJ,a,mByBhJ5B5C,EAAOC,QAAU,CAAC,SAAW,uBAAuB,sBAAwB,oCAAoC,sBAAwB,oCAAoC,oBAAsB,kCAAkC,UAAY,0B,mBCAhPD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,WAAa,wBAAwB,KAAO,kBAAkB,OAAS,oBAAoB,WAAa,wBAAwB,WAAa,0B,gCCDtL,wEAGO,SAASuK,IACZ,OACI,yBAAKhD,UAAWC,IAAQiI,aACpB,8BAAW,8BAAW,iC,kRCAtB/P,E,2CAAAA,K,4BAAAA,E,4BAAAA,E,kCAAAA,E,4CAAAA,E,2CAAAA,M,KAQZ,IAAMuD,EAAa,SAA4BtD,GAA5B,OAAwC,SAACG,GAAD,MAAiB,CAACH,OAAMG,aAoBtE4P,EAAYzM,EAAsDvD,EAAaoG,UAK/E6J,EAAY1M,EAAsDvD,EAAaqG,UAK/E6J,EAAe3M,EAA4DvD,EAAauG,aAKxF4J,EAAmB5M,EAAqEvD,EAAayG,kBAKrG2J,EAAkB7M,EAAmEvD,EAAa0G,iBASlG2J,EAAmB,SAAC9O,GAAD,8CAA+B,WAAOgD,GAAP,eAAAG,EAAA,sEAC1C/C,IAAWC,WAAWL,GADoB,OACvDF,EADuD,OAE3DkD,EAAS4L,EAAiB,CAAChN,QAAS9B,KAFuB,2CAA/B,uDAKnBiP,EAAc,SAAC/O,GAAD,8CAA+B,WAAOgD,GAAP,eAAAG,EAAA,sEACnC/C,IAAWE,UAAUN,GADc,OAClDQ,EADkD,OAEtDwC,EAAS6L,EAAgB,CAACrO,YAF4B,2CAA/B,uDAKdwO,EAAiB,SAACxO,GAAD,8CAA+B,WAAOwC,GAAP,SAAAG,EAAA,sEACxC/C,IAAWG,aAAaC,GADgB,OAEjC,IAFiC,OAEhD6C,YACLL,EAAS6L,EAAgB,CAACrO,YAH2B,2CAA/B,wD,mBCxE9B1B,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,WAAa,6BAA6B,eAAiB,iCAAiC,eAAiB,mC,gCCD/J,sCASesH,IANf,SAAiB0D,GACb,OACI,yBAAKzD,UAAWC,IAAQ0I,SAAUlF,EAAMmF,Y,kJCFnCC,EAAU,SAACA,GAAD,OAAsB,YAAqC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,KAAStF,EAAiB,gCACvEuF,EAAWD,EAAKE,SAAWF,EAAKnE,MACtC,OACI,0BAAM5E,UAAYC,IAAQiJ,aACtB,kBAAC,EAAD,eAASlJ,UAAYgJ,EAAW/I,IAAQ2E,MAAQ,IAASkE,EAAWrF,IAClEuF,GAAY,yBAAKhJ,UAAWC,IAAQkJ,WAAxB,IAAsCJ,EAAKnE,MAA3C,QAKbwE,EAAWP,EAAQ,YAEnBpE,EAAQoE,EAAQ,U,mBCd7BrQ,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,UAAY,kC,gCCClH,oEAAO,IAAMkM,EAAgB,SAAC0E,GAC1B,IAAIA,EAEJ,MAAO,qBAIEC,EAAmB,SAACC,GAAD,OAAuB,SAACF,GACpD,GAAIA,EAAMpE,OAASsE,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,gB","file":"static/js/main.18473455.chunk.js","sourcesContent":["//              Dialogs page ACTIONS\r\n//\r\n//\r\n//\r\n//\r\n//\r\nexport enum ACTIONS_TYPE {\r\n    ADD_MESSAGE = \"Dialogs/ADD-MESSAGE\",\r\n}\r\n\r\nconst makeAction = <T extends ACTIONS_TYPE, P>(type: T) => (payload: P) => ({type, payload})\r\n\r\ninterface IStringMap<T> {\r\n    [key: string]: T\r\n}\r\n\r\ntype IAnyFunction = (...args: any[]) => any;\r\n\r\ntype IActionUnion<A extends IStringMap<IAnyFunction>> = ReturnType<A[keyof A]>;\r\n\r\n\r\nexport type AddMessagePayloadType = {\r\n    message: string\r\n}\r\nexport const addMessageAC = makeAction<ACTIONS_TYPE.ADD_MESSAGE, AddMessagePayloadType>(ACTIONS_TYPE.ADD_MESSAGE)\r\n\r\nconst DialogsPageActions = {\r\n    addMessageAC\r\n}\r\n\r\nexport type DialogsActionTypes = IActionUnion<typeof DialogsPageActions>\r\n","module.exports = __webpack_public_path__ + \"static/media/userDefaultPhoto.f8a15e74.png\";","import axios from \"axios\";\r\nimport {UserType, ProfileType} from \"../types/types\";\r\n\r\nlet instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        'api-key': '2dece0c4-7aed-430e-aeba-9f10430f969a',\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 10) {\r\n        return instance.get<GetUsersResponseType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(res => res.data)\r\n    },\r\n    unfollow(userId: string) {\r\n        return instance.delete<ResponseType>(`follow/${userId}`)\r\n    },\r\n    follow(userId: string) {\r\n        return instance.post<ResponseType>(`follow/${userId}`)\r\n    }\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n            .then(res => res.data)\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get<string>(`profile/status/${userId}`)\r\n            .then(res => res.data)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<ResponseType>(`profile/status`, {status})\r\n            .then(res => res.data)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuthUserData() {\r\n        return instance.get<ResponseType<AuthUserData>>(`auth/me/`)\r\n            .then(res => res.data);\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post<ResponseType<{ userId: number }>>(`auth/login`, {email, password, rememberMe})\r\n            .then(res => res.data);\r\n    },\r\n    logout() {\r\n        return instance.delete<ResponseType>(`auth/login`)\r\n            .then(res => res.data);\r\n    }\r\n}\r\n\r\nexport enum ResultCodes {\r\n    Success = 0,\r\n    Error = 1,\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\ntype GetUsersResponseType = {\r\n    items: UserType[],\r\n    totalCount: number,\r\n    error: string | null\r\n}\r\n\r\ntype AuthUserData = {\r\n    email: string\r\n    id: number\r\n    login: string\r\n}\r\n\r\ntype ResponseType<T = {}> = {\r\n    data: T\r\n    fieldsErrors: string[]\r\n    messages: string[]\r\n    resultCode: number\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Wrapper_wrapper__3qo1w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsFacebook\":\"Preloader_ldsFacebook__3PKgV\"};","module.exports = __webpack_public_path__ + \"static/media/Profile-Outline.ae74fdec.svg\";","module.exports = __webpack_public_path__ + \"static/media/Chat-Outline.8256a581.svg\";","module.exports = __webpack_public_path__ + \"static/media/Profile-GroupFriend-Outline.ef43f0c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/Documents-Outline.9384302f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Play-Outline.837b9fa1.svg\";","module.exports = __webpack_public_path__ + \"static/media/Setting-Outline.b175e07d.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__axw63\",\"pagination__pages\":\"Pagination_pagination__pages__1AjSN\",\"pagination__btn\":\"Pagination_pagination__btn__1tOGL\",\"pagination__btn_active\":\"Pagination_pagination__btn_active__yBZ7o\",\"pagination__space\":\"Pagination_pagination__space__2AOaO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__2XEeo\",\"loginWrapper\":\"Login_loginWrapper__2N1X_\",\"loginForm\":\"Login_loginForm__1OCug\",\"loginForm__button\":\"Login_loginForm__button__3oojF\",\"loginForm__field\":\"Login_loginForm__field__2jphf\",\"loginForm__rememberMe\":\"Login_loginForm__rememberMe__2RAMu\",\"formSummaryError\":\"Login_formSummaryError__7uTS4\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","//              Users ACTIONS\r\n//\r\n//\r\n//\r\n//\r\n//\r\n\r\n\r\nimport {UserType} from \"../../../types/types\";\r\nimport {usersAPI} from \"../../../api/api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {RootStateType} from \"../../redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport enum ACTIONS_TYPE {\r\n    FOLLOW = \"Users/FOLLOW\",\r\n    UNFOLLOW = \"Users/UNFOLLOW\",\r\n    SET_USERS = \"Users/SET_USERS\",\r\n    SET_CURRENT_PAGE = \"Users/SET_CURRENT_PAGE\",\r\n    SET_TOTAL_COUNT = \"Users/SET_TOTAL_COUNT\",\r\n    TOGGLE_IS_FETCHING = \"Users/TOGGLE_IS_FETCHING\",\r\n    TOGGLE_IS_FOLLOWING_PROGRESS = \"Users/TOGGLE_IS_FOLLOWING_PROGRESS\",\r\n}\r\n\r\nconst makeAction = <T extends ACTIONS_TYPE, P>(type: T) => (payload: P) => ({type, payload})\r\n\r\ninterface IStringMap<T> {\r\n    [key: string]: T\r\n}\r\n\r\ntype IAnyFunction = (...args: any[]) => any;\r\n\r\ntype IActionUnion<A extends IStringMap<IAnyFunction>> = ReturnType<A[keyof A]>;\r\n\r\n\r\nexport type SetFollowPayloadType = {\r\n    userId: string\r\n}\r\nexport const setFollowAC = makeAction<ACTIONS_TYPE.FOLLOW, SetFollowPayloadType>(ACTIONS_TYPE.FOLLOW)\r\n\r\nexport const setUnfollowAC = makeAction<ACTIONS_TYPE.UNFOLLOW, SetFollowPayloadType>(ACTIONS_TYPE.UNFOLLOW)\r\n\r\nexport type SetUsersPayloadType = {\r\n    users: Array<UserType>\r\n}\r\nexport const setUsersAC = makeAction<ACTIONS_TYPE.SET_USERS, SetUsersPayloadType>(ACTIONS_TYPE.SET_USERS)\r\n\r\nexport type SetCurrentPagePayloadType = {\r\n    currentPage: number\r\n}\r\nexport const setCurrentPageAC = makeAction<ACTIONS_TYPE.SET_CURRENT_PAGE, SetCurrentPagePayloadType>(ACTIONS_TYPE.SET_CURRENT_PAGE)\r\n\r\nexport type SetTotalCountOfUsersPayloadType = {\r\n    totalUsersCount: number\r\n}\r\nexport const setTotalCountOfUsersAC = makeAction<ACTIONS_TYPE.SET_TOTAL_COUNT, SetTotalCountOfUsersPayloadType>(ACTIONS_TYPE.SET_TOTAL_COUNT)\r\n\r\nexport type toggleIsFetchingPayloadType = {\r\n    isFetching: boolean\r\n}\r\nexport const toggleIsFetchingAC = makeAction<ACTIONS_TYPE.TOGGLE_IS_FETCHING, toggleIsFetchingPayloadType>(ACTIONS_TYPE.TOGGLE_IS_FETCHING)\r\n\r\nexport type toggleFollowingProgressPayloadType = {\r\n    isFetching: boolean\r\n    userId: string\r\n}\r\nexport const toggleFollowingProgressAC = makeAction<ACTIONS_TYPE.TOGGLE_IS_FOLLOWING_PROGRESS, toggleFollowingProgressPayloadType>(ACTIONS_TYPE.TOGGLE_IS_FOLLOWING_PROGRESS)\r\n\r\n\r\n//              Users THUNKS\r\ntype GetStateType = () => RootStateType\r\ntype DispatchType = Dispatch<UsersActionTypes>\r\ntype ThunkType = ThunkAction<void, RootStateType, unknown, UsersActionTypes>\r\n\r\nexport const getUsersTC = (currentPage: number, pageSize: number): ThunkType => async (dispatch) => {\r\n\r\n    dispatch(toggleIsFetchingAC({isFetching: true}))\r\n    dispatch(setCurrentPageAC({currentPage}))\r\n\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n\r\n    dispatch(toggleIsFetchingAC({isFetching: false}))\r\n    dispatch(setUsersAC({users: data.items}))\r\n    dispatch(setTotalCountOfUsersAC({totalUsersCount: data.totalCount}))\r\n\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch: Dispatch, userId: string, apiMethod: any, actionCreator: Function) => {\r\n    dispatch(toggleFollowingProgressAC({isFetching: true, userId}))\r\n\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator({userId}))\r\n    }\r\n    dispatch(toggleFollowingProgressAC({isFetching: false, userId}))\r\n}\r\n\r\nexport const followTC = (userId: string): ThunkType => (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), setFollowAC)\r\n}\r\n\r\nexport const unfollowTC = (userId: string): ThunkType => (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), setUnfollowAC)\r\n}\r\n\r\nconst UsersActions = {\r\n    setFollowAC,\r\n    toggleFollowingProgressAC,\r\n    toggleIsFetchingAC,\r\n    setTotalCountOfUsersAC,\r\n    setCurrentPageAC,\r\n    setUsersAC,\r\n    setUnfollowAC\r\n}\r\nexport type UsersActionTypes = IActionUnion<typeof UsersActions>\r\n","import {uuid} from \"uuidv4\";\r\nimport {ProfileType, PostType} from \"../../types/types\";\r\nimport {ACTIONS_TYPE, ProfilePageActionTypes} from \"./actions/profile-actions\";\r\n\r\n\r\nexport type ProfilePageStateType = typeof initialState;\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: uuid(), message: \"It's my first post\", likeCounter: 333},\r\n        {id: uuid(), message: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. \", likeCounter: 356}\r\n    ] as PostType[],\r\n    profile: null as ProfileType | null,\r\n    status: \"\"\r\n}\r\n\r\n\r\n\r\nexport const profileReducer = (\r\n    state = initialState,\r\n    action: ProfilePageActionTypes\r\n): ProfilePageStateType => {\r\n\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [\r\n                    ...state.posts,\r\n                    {id: uuid(), ...action.payload, likeCounter: 0}\r\n                ],\r\n            }\r\n        case ACTIONS_TYPE.ADD_LIKE:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(\r\n                    post => post.id === action.payload.postId\r\n                        ? {...post, likeCounter: post.likeCounter + 1}\r\n                        : post\r\n                )\r\n            }\r\n        case ACTIONS_TYPE.DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post.id !== action.payload.postId)\r\n            }\r\n        case ACTIONS_TYPE.SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        case ACTIONS_TYPE.SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n//Динамическая деспичеризация, не хватает типов, не работает\r\n// const actionObj: { [key: string]: ProfilePageStateType } = {\r\n//     [PROFILE_PAGE_ACTION_TYPE.ADD_POST]: {\r\n//         ...state,\r\n//         posts: [...state.posts, {id: uuid(), message: state.newPostText, likeCounter: 0}]\r\n//     },\r\n//     [PROFILE_PAGE_ACTION_TYPE.UPDATE_NEW_POST_TEXT]: {\r\n//         ...state,\r\n//         newPostText: action.newPostText\r\n//     },\r\n//     [PROFILE_PAGE_ACTION_TYPE.ADD_LIKE]: {\r\n//         ...state,\r\n//         posts: state.posts.map(item=>item.id===action.postId ? {...item, likeCounter: item.likeCounter+1}: item)\r\n//     },\r\n// }\r\n// return actionObj[action.type] && actionObj[action.type] || state\r\n","import {uuid} from \"uuidv4\";\r\nimport { DialogType, MessageType } from \"../../types/types\";\r\nimport {ACTIONS_TYPE, DialogsActionTypes} from \"./actions/dialogs-actions\";\r\n\r\nexport type DialogsPageStateType = typeof initialState\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: uuid(), name: \"Diko\"},\r\n        {id: uuid(), name: \"Almaz\"},\r\n        {id: uuid(), name: \"Erzhan\"},\r\n        {id: uuid(), name: \"Banzai\"}\r\n    ] as DialogType[],\r\n    messages: [\r\n        {id: uuid(), message: \"Hi\"},\r\n        {id: uuid(), message: \"How are you l\"},\r\n        {\r\n            id: uuid(),\r\n            message: \"is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took \"\r\n        },\r\n        {id: uuid(), message: \"Yo\"}\r\n    ] as MessageType[],\r\n}\r\n\r\nexport const dialogsReducer = (state = initialState, action: DialogsActionTypes): DialogsPageStateType => {\r\n\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.ADD_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messages: [\r\n                    ...state.messages,\r\n                    {id: uuid(), ...action.payload}\r\n                ],\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// const actionObj: { [key: string]: any  } = {\r\n//     [ACTION_TYPE.ADD_MESSAGE]: {\r\n//         ...state,\r\n//         messages: [...state.messages, {id: uuid(),\r\n//             message: state.newMessageText,}]\r\n//     },\r\n//     [ACTION_TYPE.UPDATE_NEW_MESSAGE_TEXT]: {\r\n//         ...state,\r\n//         newMessageText: action.newMessageText\r\n//     },\r\n// }\r\n// return actionObj[action.type] && actionObj[action.type] || state\r\n\r\n","//              Auth ACTIONS\r\n//\r\n//\r\n//\r\n//\r\n//\r\n\r\nimport {AuthStateType} from \"../auth-reducer\";\r\nimport {Dispatch} from \"redux\";\r\nimport {authAPI, ResultCodes} from \"../../../api/api\";\r\nimport {FormAction, stopSubmit} from \"redux-form\";\r\nimport {RootStateType} from \"../../redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {ProfilePageActionTypes} from \"./profile-actions\";\r\n\r\nexport enum ACTIONS_TYPE {\r\n    SET_AUTH_USER_DATA = \"Auth/SET_AUTH_USER_DATA\",\r\n}\r\n\r\nconst makeAction = <T extends ACTIONS_TYPE, P>(type: T) => (payload: P) => ({type, payload})\r\n\r\ninterface IStringMap<T> {\r\n    [key: string]: T\r\n}\r\n\r\ntype IAnyFunction = (...args: any[]) => any;\r\n\r\ntype IActionUnion<A extends IStringMap<IAnyFunction>> = ReturnType<A[keyof A]>;\r\n\r\n\r\nexport const setAuthUserDataAC = makeAction<ACTIONS_TYPE.SET_AUTH_USER_DATA, AuthStateType>(ACTIONS_TYPE.SET_AUTH_USER_DATA)\r\n\r\n//Auth THUNKS\r\ntype GetStateType = () => RootStateType\r\ntype DispatchType = Dispatch<ProfilePageActionTypes>\r\ntype ThunkType = ThunkAction<void, RootStateType, unknown, AuthActionTypes | FormAction>\r\n\r\n\r\nexport const getAuthUserDataTC = (): ThunkType => async (dispatch) => {\r\n    let data = await authAPI.getAuthUserData()\r\n    let {email, id, login} = data.data\r\n    if (data.resultCode === ResultCodes.Success)\r\n        dispatch(setAuthUserDataAC({email, id, login, isAuth: true}))\r\n}\r\n//any\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean = false): ThunkType =>\r\n    async (dispatch) => {\r\n        let data = await authAPI.login(email, password, rememberMe)\r\n        if (data.resultCode === ResultCodes.Success) {\r\n            dispatch(getAuthUserDataTC())\r\n        } else {\r\n            let message = data.messages.length > 0 ? data.messages[0] : \"Some error\"\r\n            dispatch(stopSubmit(\"login\", {_error: message}))\r\n        }\r\n    }\r\nexport const logoutTC = (): ThunkType => async (dispatch) => {\r\n    let data = await authAPI.logout()\r\n    if (data.resultCode === ResultCodes.Success)\r\n        dispatch(setAuthUserDataAC({isAuth: false, login: null, email: null, id: null}))\r\n}\r\n\r\n\r\nconst AuthActions = {\r\n    setAuthUserDataAC\r\n}\r\nexport type AuthActionTypes = IActionUnion<typeof AuthActions>\r\n\r\n","\r\nexport const updateObjectInArray = (items: Array<any>, itemId: string, objPropName: any, newObjProps: any) =>{\r\n\r\n    return items.map(item => item[objPropName] === itemId\r\n        ? {...item, ...newObjProps}\r\n        : item)\r\n}\r\n\r\n\r\n","import {ACTIONS_TYPE, UsersActionTypes} from \"./actions/users-actions\";\r\nimport {UserType} from \"../../types/types\";\r\nimport {updateObjectInArray} from \"../../utils/objects-helpers\";\r\n\r\nexport type UsersStateType = typeof initialState;\r\n\r\n\r\nlet initialState = {\r\n    users: [] as UserType[],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 2,\r\n    isFetching: true,\r\n    followingInProgress: [] as string[]\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action: UsersActionTypes): UsersStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.payload.userId, \"id\", {followed: true})\r\n            }\r\n        }\r\n        case ACTIONS_TYPE.UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.payload.userId, \"id\", {followed: false})\r\n            }\r\n        }\r\n        case ACTIONS_TYPE.SET_USERS: {\r\n            return {...state, users: [...action.payload.users]}\r\n        }\r\n\r\n        case ACTIONS_TYPE.SET_CURRENT_PAGE: {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case ACTIONS_TYPE.SET_TOTAL_COUNT: {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case ACTIONS_TYPE.TOGGLE_IS_FETCHING: {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case ACTIONS_TYPE.TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state, followingInProgress: action.payload.isFetching\r\n                    ? [...state.followingInProgress, action.payload.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.payload.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","//              Auth ACTIONS\r\n//\r\n//\r\n//\r\n//\r\n//\r\n\r\nimport {Dispatch} from \"redux\";\r\nimport {RootStateType} from \"../../redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"../app-reducer\";\r\nimport {getAuthUserDataTC} from \"./auth-actions\";\r\n\r\nexport enum ACTIONS_TYPE {\r\n    SET_INITIALIZED_SUCCESS = \"App/SET_INITIALIZED_SUCCESS\",\r\n}\r\n\r\nconst makeAction = <T extends ACTIONS_TYPE, P>(type: T) => (payload: P) => ({type, payload})\r\n\r\ninterface IStringMap<T> {\r\n    [key: string]: T\r\n}\r\n\r\ntype IAnyFunction = (...args: any[]) => any;\r\n\r\ntype IActionUnion<A extends IStringMap<IAnyFunction>> = ReturnType<A[keyof A]>;\r\n\r\n\r\n// export const setInitializedSuccessAC = makeAction<ACTIONS_TYPE.SET_INITIALIZED_SUCCESS,>(ACTIONS_TYPE.SET_INITIALIZED_SUCCESS)\r\nexport const setInitializedSuccessAC = () => ({type: ACTIONS_TYPE.SET_INITIALIZED_SUCCESS})\r\n//Auth THUNKS\r\ntype GetStateType = () => RootStateType\r\ntype DispatchType = Dispatch<AppActionTypes>\r\ntype ThunkType = ThunkAction<void, RootStateType, unknown, AppActionTypes>\r\n\r\nexport const initializeAppTC = (): ThunkType => (dispatch) => {\r\n    // @ts-ignore\r\n    let promise: Promise = dispatch(getAuthUserDataTC())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(setInitializedSuccessAC())\r\n        })\r\n}\r\n\r\n\r\nconst AppActions = {\r\n    setInitializedAC: setInitializedSuccessAC\r\n}\r\nexport type AppActionTypes = IActionUnion<typeof AppActions>\r\n\r\n","import {ACTIONS_TYPE, AuthActionTypes} from \"./actions/auth-actions\";\r\n\r\nlet initialState = {\r\n    id: null as number | null,\r\n    login: null as string | null,\r\n    email: null as string | null,\r\n    isAuth: false,\r\n}\r\nexport type AuthStateType = typeof initialState;\r\n\r\nexport const authReducer = (state = initialState, action: AuthActionTypes): AuthStateType  => {\r\n\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import {ACTIONS_TYPE, AppActionTypes} from \"./actions/app-actions\";\r\n\r\nlet initialState = {\r\n    initialized: false as boolean,\r\n\r\n}\r\nexport type AppStateType = typeof initialState;\r\n\r\nexport const appReducer = (state = initialState, action: AppActionTypes): AppStateType  => {\r\n\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.SET_INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import {combineReducers} from \"redux\";\r\nimport {profileReducer} from \"./reducers/profile-page-reducer\";\r\nimport {dialogsReducer} from \"./reducers/dialogs-reducer\";\r\nimport {usersReducer} from \"./reducers/users-reducer\";\r\nimport {authReducer} from \"./reducers/auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport {appReducer} from \"./reducers/app-reducer\";\r\nimport {configureStore} from \"@reduxjs/toolkit\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n})\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>\r\n\r\nlet store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunkMiddleware)\r\n});\r\n\r\nexport default store;\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n","import React from \"react\";\r\nimport classes from './News.module.scss'\r\n\r\nfunction News() {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;\r\n","import React from \"react\";\r\nimport classes from './Music.module.scss'\r\n\r\nfunction Music() {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;\r\n","import React from \"react\";\r\nimport classes from './Settings.module.scss'\r\nimport Wrapper from \"../Wrapper/Wrapper\";\r\n\r\nfunction Settings() {\r\n    return (\r\n        <Wrapper>\r\n            <div className={classes.settings}>\r\n                Settings\r\n                <div className={classes.block}>\r\n                    <div className={classes.block__row}>\r\n                        <div className={classes.block__element}></div>\r\n                        <div className={classes.block__content}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Wrapper>\r\n\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport classes from \"./Pagination.module.scss\";\r\n\r\ntype PropsType = {\r\n    totalItems: number\r\n    itemsOnPage: number\r\n    currentPage: number\r\n    changePageNumber: (page: number) => void\r\n}\r\n\r\nconst Pagination: React.FC<PropsType> = ({currentPage, itemsOnPage, totalItems, changePageNumber}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItems / itemsOnPage);\r\n    let firstPage = currentPage - 2;\r\n    let lastPage = currentPage + 2;\r\n    let pages = [];\r\n\r\n    if (firstPage <= 0) firstPage = 1\r\n    if (lastPage >= pagesCount) lastPage = pagesCount\r\n\r\n    for (let i = firstPage; i <= lastPage; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const clickPrevButton = () => {\r\n        if (currentPage>1)  changePageNumber(currentPage - 1)\r\n    }\r\n\r\n    const clickNextButton = () => {\r\n        if (currentPage<pagesCount)  changePageNumber(currentPage + 1)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.pagination}>\r\n            <button className={classes.pagination__btn}\r\n                    disabled={currentPage===1}\r\n                    onClick={clickPrevButton}>«</button>\r\n\r\n            <div className={classes.pagination__pages}>\r\n                {currentPage > 3 && <>\r\n                <button className={`${classes.pagination__btn} ${1 === currentPage ? classes.pagination__btn_active : \"\"}`}\r\n                     onClick={() => changePageNumber(1)}>{1}</button>\r\n                    <div className={classes.pagination__space}>...</div>\r\n                </>\r\n                }\r\n                {pages.map(pageN => <button\r\n                    className={`${classes.pagination__btn} ${pageN === currentPage ? classes.pagination__btn_active : \"\"}`}\r\n                    onClick={() => changePageNumber(pageN)}>{pageN}</button>)}\r\n                {currentPage < pagesCount - 4 && <>\r\n                    <div className={classes.pagination__space}>...</div>\r\n                    <button className={`${classes.pagination__btn} ${pagesCount === currentPage ? classes.pagination__btn_active : \"\"}`}\r\n                    onClick={() => changePageNumber(pagesCount)}>{pagesCount}</button>\r\n                </>}\r\n            </div>\r\n\r\n            <button className={classes.pagination__btn}\r\n                    disabled={currentPage===pagesCount}\r\n                    onClick={clickNextButton}>»</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport classes from \"./User.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userDefaultPhoto from \"../../../assets/userDefaultPhoto.png\";\r\nimport {UserType} from \"../../../types/types\";\r\n\r\ntype PropsType = {\r\n    userData: UserType\r\n    followTC: (userId: string) => void\r\n    unfollowTC: (userId: string) => void\r\n    followingInProgress: Array<string>\r\n}\r\n\r\nconst User: React.FC<PropsType> = ({userData, followingInProgress, followTC, unfollowTC}) => {\r\n    return (\r\n        <div className={classes.userCard} key={userData.id}>\r\n            <div className={classes.userCard__authorPhoto}>\r\n                <NavLink to={\"/profile/\" + userData.id}>\r\n                    <img src={userData.photos.small !== null ? userData.photos.small : userDefaultPhoto}\r\n                         alt=\"\"/>\r\n                </NavLink>\r\n                <div>\r\n                    {userData.followed\r\n                        ? <button className={classes.followBtn}\r\n                                  disabled={followingInProgress.some(id => id === userData.id)}\r\n                                  onClick={() => unfollowTC(userData.id)}>{\"unfollow\"}</button>\r\n                        : <button className={classes.followBtn}\r\n                                  disabled={followingInProgress.some(id => id === userData.id)}\r\n                                  onClick={() => {followTC(userData.id)}}>{\"follow\"}</button>}\r\n                </div>\r\n            </div>\r\n            <div className={classes.userCard__body}>\r\n\r\n                <div>{userData.id}</div>\r\n                <div className={classes.userCard__body_header}>{userData.name}</div>\r\n                <div className={classes.userCard__body_text}>{userData.status}</div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport Wrapper from \"../Wrapper/Wrapper\";\r\nimport classes from \"./Users.module.scss\";\r\nimport {Preloader} from \"../UI/Preloader/Preloader\";\r\nimport {UserType} from \"../../types/types\";\r\nimport Pagination from \"../common/Pagination/Pagination\";\r\nimport User from \"./User/User\";\r\n\r\ntype UsersTypes = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageNumberChanged: (pageNumber: number) => void\r\n    users: UserType[]\r\n    followTC: (userId: string) => void\r\n    unfollowTC: (userId: string) => void\r\n    isFetching: boolean\r\n    followingInProgress: Array<string>\r\n}\r\n\r\nfunction Users({unfollowTC,\r\n                   followTC,\r\n                   followingInProgress,\r\n                   onPageNumberChanged,\r\n                   pageSize,\r\n                   totalUsersCount,\r\n                   currentPage,\r\n                   isFetching,\r\n                   users}: UsersTypes) {\r\n    return (\r\n        <Wrapper>\r\n            <div className={classes.usersPage}>\r\n                <div className={classes.pageButton}>\r\n                    <Pagination currentPage={currentPage}\r\n                                itemsOnPage={pageSize}\r\n                                totalItems={totalUsersCount}\r\n                                changePageNumber={onPageNumberChanged}/>\r\n\r\n                </div>\r\n                {isFetching\r\n                    ? <Preloader/>\r\n                    : <div>\r\n                        {users.map(user => (\r\n                            <User userData={user}\r\n                                  key={user.id}\r\n                                  followTC={followTC}\r\n                                  unfollowTC={unfollowTC}\r\n                                  followingInProgress={followingInProgress}\r\n                            />\r\n                        ))}\r\n                        <div className={classes.pageButton}>\r\n                            <Pagination currentPage={currentPage}\r\n                                        itemsOnPage={pageSize}\r\n                                        totalItems={totalUsersCount}\r\n                                        changePageNumber={onPageNumberChanged}/>\r\n\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Users;\r\n","import {RootStateType} from \"../../redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nexport const getUsers  = (state: RootStateType) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\n// export const getUsersSelector  = (state: RootStateType) => {\r\n//     return getUsers(state).filter(u => true);\r\n// }\r\n//\r\n// export const getUsersSuper = createSelector(getUsers,(users)=> {\r\n//     users.filter(u => true)\r\n// })\r\n\r\nexport const getPageSize  = (state: RootStateType) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount  = (state: RootStateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage  = (state: RootStateType) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching  = (state: RootStateType) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress  = (state: RootStateType) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport Users from \"./Users\";\r\nimport { getUsersTC, unfollowTC, followTC } from \"../../redux/reducers/actions/users-actions\";\r\nimport { UserType } from \"../../types/types\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/reducers/selectors/users-selector\";\r\n\r\ntype PropsType = MatStateToPropsType & {\r\n    followTC: (userId: string) => void\r\n    unfollowTC: (userId: string) => void\r\n    getUsersTC: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        const {pageSize, currentPage} = this.props\r\n        this.props.getUsersTC(currentPage, pageSize)\r\n    }\r\n\r\n    onPageNumberChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsersTC(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <Users {...this.props} onPageNumberChanged={this.onPageNumberChanged}/>\r\n    }\r\n}\r\n\r\ntype MatStateToPropsType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount:number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: string[]\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateType): MatStateToPropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        followTC, unfollowTC, getUsersTC\r\n    })(UsersContainer)\r\n\r\n","import {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport classes from \"../Login.module.scss\";\r\nimport {Input} from \"../../common/FormControls/FormControls\";\r\nimport {requiredField} from \"../../../utils/validators/validators\";\r\nimport React from \"react\";\r\n\r\nexport type FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes.loginForm}>\r\n            <div className={classes.loginForm__field}>\r\n                <Field placeholder={\"Type your username\"} component={Input} name={\"email\"} validate={[requiredField]} />\r\n            </div>\r\n            <div className={classes.loginForm__field}>\r\n                <Field placeholder={\"Type your password\"} type={\"password\"} component={Input} name={\"password\"} validate={[requiredField]}/>\r\n            </div>\r\n            {props.error && <div className={classes.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n\r\n            <div>\r\n                <button className={classes.loginForm__button}>Login</button>\r\n            </div>\r\n            <div className={classes.loginForm__rememberMe}>\r\n                <Field type={\"checkbox\"} component={Input} name={\"rememberMe\"} />\r\n                <span>remember me</span>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default reduxForm<FormDataType>({form: \"login\"})(LoginForm)\r\n","import React from 'react';\r\nimport classes from \"./Login.module.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport {loginTC} from '../../redux/reducers/actions/auth-actions';\r\nimport LoginForm, { FormDataType } from './LoginForm/LoginForm';\r\n\r\n\r\ntype PropsType = {\r\n    loginTC: (email: string, password: string, rememberMe: boolean) => void\r\n    isAuth: boolean\r\n}\r\n\r\nconst Login: React.FC<PropsType> = ({loginTC, isAuth}) => {\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        loginTC(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.loginContainer}>\r\n            <div className={classes.loginWrapper}>\r\n                <h2>Login</h2>\r\n                <LoginForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateType)=>({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {loginTC})(Login);\r\n","import React from \"react\";\r\nimport classes from './Nav.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {NavItemsType} from \"./NavContainer\";\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logoutTC: () => void\r\n    navItems: NavItemsType[]\r\n}\r\n\r\nconst Nav: React.FC<PropsType> = ({isAuth, login, logoutTC, navItems}) => {\r\n\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.loginBlock}>\r\n                {isAuth\r\n                    ? <div>{login} - <button onClick={logoutTC}>Logout</button></div>\r\n                    : <NavLink to={\"/login\"}>Login</NavLink>}\r\n            </div>\r\n\r\n            <div className={classes.nav__items}>\r\n                {navItems.map(navItem => (\r\n                    <NavLink\r\n                        to={navItem.pathTo}\r\n                        key={navItem.id}\r\n                        className={classes.item}\r\n                        activeClassName={classes.active}>\r\n                        <div className={classes.item__icon}>\r\n                            <img src={navItem.icon} alt=\"\"/>\r\n                        </div>\r\n                        <div className={classes.item__name}>\r\n                            {navItem.navName}\r\n                        </div>\r\n                    </NavLink>))}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport Nav from \"./Nav\";\r\nimport { logoutTC } from '../../redux/reducers/actions/auth-actions';\r\nimport {uuid} from \"uuidv4\";\r\nimport Profile from \"../../assets/nav/Profile-Outline.svg\";\r\nimport Chat from \"../../assets/nav/Chat-Outline.svg\";\r\nimport Users from \"../../assets/nav/Profile-GroupFriend-Outline.svg\";\r\nimport News from \"../../assets/nav/Documents-Outline.svg\";\r\nimport Music from \"../../assets/nav/Play-Outline.svg\";\r\nimport Settings from \"../../assets/nav/Setting-Outline.svg\";\r\n\r\nexport type NavItemsType = {\r\n    id: string\r\n    pathTo: string\r\n    icon: string\r\n    navName: string\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    logoutTC: () => void\r\n}\r\n\r\ntype RootPropsType = MapStatePropsType & MapDispatchToPropsType\r\n\r\nclass NavContainer extends React.Component<RootPropsType> {\r\n\r\n\r\n\r\n    render() {\r\n        let navItems: Array<NavItemsType> = [\r\n            {id: uuid(), pathTo: '/profile', icon: Profile, navName: 'PROFILE'},\r\n            {id: uuid(), pathTo: '/messages', icon: Chat, navName: 'MESSAGES'},\r\n            {id: uuid(), pathTo: '/users', icon: Users, navName: 'USERS'},\r\n            {id: uuid(), pathTo: '/news', icon: News, navName: 'NEWS'},\r\n            {id: uuid(), pathTo: '/music', icon: Music, navName: 'MUSIC'},\r\n            {id: uuid(), pathTo: '/settings', icon: Settings, navName: 'SETTINGS'},\r\n        ]\r\n        return (\r\n            <Nav {...this.props} navItems={navItems}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\nexport default connect(mapStateToProps, {logoutTC})(NavContainer);\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport {Route, Switch, withRouter} from 'react-router-dom';\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\n\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport NavContainer from \"./components/Nav/NavContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeAppTC} from \"./redux/reducers/actions/app-actions\";\r\nimport {RootStateType} from \"./redux/redux-store\";\r\nimport {Preloader} from \"./components/UI/Preloader/Preloader\";\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"))\r\n\r\ntype MapDispatchToPropsType = {\r\n    initializeAppTC: () => void\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    initialized: boolean\r\n}\r\n\r\ntype AppPropsTypes = MapDispatchToPropsType & MapStateToPropsType\r\n\r\nclass App extends React.Component<AppPropsTypes> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeAppTC()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <NavContainer/>\r\n                <div className='app-wrapper-content'>\r\n                    <Switch>\r\n                        <Route path='/profile/:userId?' render={() =>\r\n                            <React.Suspense fallback={<Preloader/>}>\r\n                                <ProfileContainer/>\r\n                            </React.Suspense>\r\n                        }/>\r\n                        <Route path='/messages' render={() =>\r\n                            <React.Suspense fallback={<Preloader/>}>\r\n                                <DialogsContainer/>\r\n                            </React.Suspense>}/>\r\n                        <Route path='/users' component={UsersContainer}/>\r\n                        <Route path='/news' component={News}/>\r\n                        <Route path='/music' component={Music}/>\r\n                        <Route path='/settings' component={Settings}/>\r\n                        <Route path='/login' component={LoginPage}/>\r\n                        <Route path='/' render={() =>\r\n                            <React.Suspense fallback={<Preloader/>}>\r\n                                <ProfileContainer/>\r\n                            </React.Suspense>}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose<any>(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeAppTC})\r\n)(App)\r\n;\r\n","import React from 'react';\r\nimport './index.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/redux-store\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userCard\":\"User_userCard__1UrXa\",\"userCard__authorPhoto\":\"User_userCard__authorPhoto__3XZ-U\",\"userCard__body_header\":\"User_userCard__body_header__2uRYE\",\"userCard__body_text\":\"User_userCard__body_text__1xpkd\",\"followBtn\":\"User_followBtn__Wt2fL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__gGHbY\",\"nav__items\":\"Nav_nav__items__19iZi\",\"item\":\"Nav_item__1iOrL\",\"active\":\"Nav_active__3HRda\",\"item__icon\":\"Nav_item__icon__17QVF\",\"item__name\":\"Nav_item__name__5TzBU\"};","import React from \"react\";\r\nimport classes from \"./Preloader.module.scss\";\r\n\r\nexport function Preloader() {\r\n    return (\r\n        <div className={classes.ldsFacebook}>\r\n            <div></div><div></div><div></div>\r\n        </div>\r\n    )\r\n}\r\n","import {ProfileType} from \"../../../types/types\";\r\nimport {profileAPI} from \"../../../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {RootStateType} from \"../../redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\n\r\nexport enum ACTIONS_TYPE {\r\n    ADD_POST = \"Profile/ADD-POST\",\r\n    ADD_LIKE = \"Profile/ADD-LIKE\",\r\n    DELETE_POST = \"Profile/DELETE_POST\",\r\n    SET_USER_PROFILE = \"Profile/SET_USER_PROFILE\",\r\n    SET_USER_STATUS = \"Profile/SET_USER_STATUS\",\r\n}\r\n\r\nconst makeAction = <T extends ACTIONS_TYPE, P>(type: T) => (payload: P) => ({type, payload})\r\n\r\ninterface IStringMap<T> {\r\n    [key: string]: T\r\n}\r\n\r\ntype IAnyFunction = (...args: any[]) => any;\r\n\r\ntype IActionUnion<A extends IStringMap<IAnyFunction>> = ReturnType<A[keyof A]>;\r\n\r\n//              Profile page ACTIONS\r\n//\r\n//\r\n//\r\n//\r\n//\r\n\r\nexport type AddPostPayloadType = {\r\n    message: string\r\n}\r\nexport const addPostAC = makeAction<ACTIONS_TYPE.ADD_POST, AddPostPayloadType>(ACTIONS_TYPE.ADD_POST)\r\n\r\nexport type AddLikePayloadType = {\r\n    postId: string\r\n}\r\nexport const addLikeAC = makeAction<ACTIONS_TYPE.ADD_LIKE, AddLikePayloadType>(ACTIONS_TYPE.ADD_LIKE)\r\n\r\nexport type DeletePostPayloadType = {\r\n    postId: string\r\n}\r\nexport const deletePostAC = makeAction<ACTIONS_TYPE.DELETE_POST, DeletePostPayloadType>(ACTIONS_TYPE.DELETE_POST)\r\n\r\nexport type SetUserProfilePayloadType = {\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfileAC = makeAction<ACTIONS_TYPE.SET_USER_PROFILE, SetUserProfilePayloadType>(ACTIONS_TYPE.SET_USER_PROFILE)\r\n\r\nexport type setUserStatusPayloadType = {\r\n    status: string\r\n}\r\nexport const setUserStatusAC = makeAction<ACTIONS_TYPE.SET_USER_STATUS, setUserStatusPayloadType>(ACTIONS_TYPE.SET_USER_STATUS)\r\n\r\n//              Profile page THUNKS\r\n\r\ntype GetStateType = () => RootStateType\r\ntype DispatchType = Dispatch<ProfilePageActionTypes>\r\ntype ThunkType = ThunkAction<void, RootStateType, unknown, ProfilePageActionTypes>\r\n\r\n\r\nexport const getUserProfileTC = (userId: string): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfileAC({profile: data}))\r\n}\r\n\r\nexport const getStatusTC = (userId: string): ThunkType => async (dispatch) => {\r\n    let status = await profileAPI.getStatus(userId)\r\n    dispatch(setUserStatusAC({status}))\r\n}\r\n\r\nexport const updateStatusTC = (status: string): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.updateStatus(status)\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserStatusAC({status}))\r\n    }\r\n\r\n}\r\n\r\nconst ProfilePageActions = {\r\n    addPostAC,\r\n    addLikeAC,\r\n    deletePostAC,\r\n    setUserProfileAC,\r\n    setUserStatusAC,\r\n}\r\n\r\nexport type ProfilePageActionTypes = IActionUnion<typeof ProfilePageActions>\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Settings_block__1gfy1\",\"block__row\":\"Settings_block__row__3hXC9\",\"block__element\":\"Settings_block__element__2d0ze\",\"block__content\":\"Settings_block__content__1y-rT\"};","import React from \"react\";\r\nimport classes from './Wrapper.module.scss'\r\n\r\nfunction Wrapper(props: any) {\r\n    return (\r\n        <div className={classes.wrapper}>{props.children}</div>\r\n    )\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from 'react';\r\nimport classes from \"./FormControls.module.scss\";\r\n\r\nexport const Element = (Element: string ) => ({ input, meta, ...props }: any) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <span className={ classes.formControl}>\r\n            <Element className={(hasError ? classes.error : \"\")} {...input} {...props} />\r\n            { hasError && <div className={classes.errorText}> { meta.error } </div> }\r\n        </span>\r\n    );\r\n};\r\n\r\nexport const TextArea = Element(\"textarea\");\r\n\r\nexport const Input = Element(\"input\")\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"Users_usersPage__1fI9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__NudcL\",\"error\":\"FormControls_error__TzFdf\",\"errorText\":\"FormControls_errorText__q7mXg\"};","\r\n\r\nexport const requiredField = (value: string) => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n\r\n    return undefined\r\n}\r\n"],"sourceRoot":""}